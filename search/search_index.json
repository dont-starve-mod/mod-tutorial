{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u70b9\u6211","title":"Home"},{"location":"h5/","text":"<ul> <li>AAA</li> <li>BBB</li> </ul>","title":"H5"},{"location":"test/","text":"3.3 \u00b6 Material for MkDocs - Material for MkDocs :root { --md-text-font-family: \"Roboto\"; --md-code-font-family: \"Roboto Mono\" } window.ga = window.ga || function() { (ga.q = ga.q || []).push(arguments) }, ga.l = +new Date, ga(\"create\", \"UA-73586301-1\", \"auto\"), ga(\"set\", \"anonymizeIp\", !0), ga(\"send\", \"pageview\"), document.addEventListener(\"DOMContentLoaded\", function() { document.forms.search &amp;&amp; document.forms.search.query.addEventListener(\"blur\", function() { var e; this.value &amp;&amp; (e = document.location.pathname, ga(\"send\", \"pageview\", e + \"?q=\" + this.value)) }), \"undefined\" != typeof location$ &amp;&amp; location$.subscribe(function(e) { ga(\"send\", \"pageview\", e.pathname) }) }) function __prefix(e) { return new URL(\".\", location).pathname + \".\" + e } function __get(e, t=localStorage) { return JSON.parse(t.getItem(__prefix(e))) } var palette = __get(\"__palette\"); if (null !== palette && \"object\" == typeof palette.color) for (var key in palette.color) document.body.setAttribute(\"data-md-color-\" + key, palette.color[key]) For updates follow @squidfunk on Twitter Material for MkDocs Material for MkDocs Initializing search squidfunk/mkdocs-material Home Getting started Setup Reference Insiders .md-header { position:initial } .md-main__inner { margin:0 } .md-content { display:none } @media screen and (min-width: 60em) { .md-sidebar--secondary { display:none } } @media screen and (min-width: 76.25em) { .md-sidebar--primary { display: none } } Technical documentation that just works Create a branded static site from a set of Markdown files to host the documentation of your Open Source or commercial project \u2013 customizable, searchable, mobile-friendly, 40+ languages. Set up in 5 minutes. Quick start Get Insiders Material for MkDocs squidfunk/mkdocs-material Home Getting started Getting started Installation Creating your site Publishing your site Customization Troubleshooting Data privacy License Releases Releases Changelog Upgrade guide Deprecations Setup Setup Changing the colors Changing the fonts Changing the language Changing the logo and icons Setting up navigation Setting up site search Setting up site analytics Setting up versioning Setting up the header Setting up the footer Adding a git repository Adding a comment system Reference Reference Abbreviations Admonitions Buttons Code blocks Content tabs Data tables Diagrams Footnotes Formatting Icons + Emojis Images Lists MathJax Meta tags Variables Insiders Insiders Sponsorship Getting started Getting started Installation Changelog {\"base\": \".\", \"features\": [\"navigation.sections\", \"navigation.tabs\"], \"translations\": {\"clipboard.copy\": \"Copy to clipboard\", \"clipboard.copied\": \"Copied to clipboard\", \"search.config.lang\": \"en\", \"search.config.pipeline\": \"trimmer, stopWordFilter\", \"search.config.separator\": \"[\\\\s\\\\-]+\", \"search.placeholder\": \"Search\", \"search.result.placeholder\": \"Type to start searching\", \"search.result.none\": \"No matching documents\", \"search.result.one\": \"1 matching document\", \"search.result.other\": \"# matching documents\", \"search.result.more.one\": \"1 more on this page\", \"search.result.more.other\": \"# more on this page\", \"search.result.term.missing\": \"Missing\"}, \"search\": \"assets/javascripts/workers/search.fe42c31b.min.js\", \"version\": null}","title":"Test"},{"location":"test/#33","text":"Material for MkDocs - Material for MkDocs :root { --md-text-font-family: \"Roboto\"; --md-code-font-family: \"Roboto Mono\" } window.ga = window.ga || function() { (ga.q = ga.q || []).push(arguments) }, ga.l = +new Date, ga(\"create\", \"UA-73586301-1\", \"auto\"), ga(\"set\", \"anonymizeIp\", !0), ga(\"send\", \"pageview\"), document.addEventListener(\"DOMContentLoaded\", function() { document.forms.search &amp;&amp; document.forms.search.query.addEventListener(\"blur\", function() { var e; this.value &amp;&amp; (e = document.location.pathname, ga(\"send\", \"pageview\", e + \"?q=\" + this.value)) }), \"undefined\" != typeof location$ &amp;&amp; location$.subscribe(function(e) { ga(\"send\", \"pageview\", e.pathname) }) }) function __prefix(e) { return new URL(\".\", location).pathname + \".\" + e } function __get(e, t=localStorage) { return JSON.parse(t.getItem(__prefix(e))) } var palette = __get(\"__palette\"); if (null !== palette && \"object\" == typeof palette.color) for (var key in palette.color) document.body.setAttribute(\"data-md-color-\" + key, palette.color[key]) For updates follow @squidfunk on Twitter Material for MkDocs Material for MkDocs Initializing search squidfunk/mkdocs-material Home Getting started Setup Reference Insiders .md-header { position:initial } .md-main__inner { margin:0 } .md-content { display:none } @media screen and (min-width: 60em) { .md-sidebar--secondary { display:none } } @media screen and (min-width: 76.25em) { .md-sidebar--primary { display: none } }","title":"3.3"},{"location":"update/","text":"\u65e0\u8bb0\u5f55\u3002","title":"Update"},{"location":"theme/anim-shader/","text":"\u52a8\u753b\u6e32\u67d3\u89c4\u5219 \u00b6 \u524d\u8a00 \u00b6 \u672c\u7bc7\u4e0d\u8bb2\u89e3\u5982\u4f55\u5236\u4f5c\u3001\u52a0\u8f7d\u548c\u64ad\u653e\u52a8\u753b\uff0c\u8fd9\u4e9b\u90fd\u5f88\u57fa\u7840\u3002 \u6211\u4eec\u6765\u70b9\u786c\u6838\u7684\uff1a\u5b8c\u5168\u89e3\u6790\u9965\u8352\u52a8\u753b\u7740\u8272\u5668 shaders/anim.ksh\u3002 uniform \u53d8\u91cf \u00b6 \u7edf\u4e00\u53d8\u91cf\u7531\u4e3b\u7a0b\u5e8f\u4f20\u5165\u7740\u8272\u5668\uff0c\u5728\u9876\u70b9\u7740\u8272\u5668\u548c\u50cf\u7d20\u7740\u8272\u5668\u4e2d\u90fd\u80fd\u4f7f\u7528\uff0c\u4e14\u5bf9\u4e8e\u6bcf\u4e2a\u6e32\u67d3\u8fdb\u7a0b\u503c\u56fa\u5b9a\u3002\u5728\u7740\u8272\u5668\u4e2d\uff0c\u7edf\u4e00\u53d8\u91cf\u662f \u53ea\u8bfb \u7684\u3002 \u4e0b\u9762\u662f\u9965\u8352\u52a8\u753b\u7740\u8272\u5668\u4f7f\u7528\u7684\u7edf\u4e00\u53d8\u91cf\uff1a \u7c7b\u578b \u53d8\u91cf\u540d \u6765\u6e90 mat4 MatrixP ? mat4 MatrixV ? mat4 MatrixW \u7269\u4f53\u7684\u4e16\u754c\u5750\u6807\uff0c\u53ef\u80fd\u6765\u81ea Transform:GetWorldPosition() vec2 PARAMS ? vec4 TIMEPARAMS \u6e38\u620f\u65f6\u95f4 vec4 TINT_ADD AnimState:SetMultColour(f, f, f, f) vec4 TINT_MULT AnimState:SetAddColour(f, f, f, f) vec3 FLOAT_PARAMS AnimState:SetFloatParams(f, f, f) vec4 HAUNTPARAMS \u4f5c\u795f vec4 HAUNTPARAMS2 \u4f5c\u795f vec4 OCEAN_BLEND_PARAMS AnimState:SetOceanBlendParams(f) vec3 CAMERARIGHT \u5728\u4e0b\u9762\u7684\u6e90\u7801\u5206\u6790\u4e2d\uff0c\u6211\u4eec\u770b\u770b\u8fd9\u4e9b\u53d8\u91cf\u662f\u5982\u4f55\u53d1\u6325\u4f5c\u7528\u7684\u3002 varying \u53d8\u91cf \u00b6 \u7528\u4e8e\u628a\u4e00\u4e9b\u4fe1\u606f\u4ece\u9876\u70b9\u7740\u8272\u5668\u4f20\u9012\u5230\u50cf\u7d20\u7740\u8272\u5668\u3002\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u5199\uff0c\u5728\u50cf\u7d20\u7740\u8272\u5668\u4e2d\u8bfb\u3002 \u7c7b\u578b \u53d8\u91cf\u540d vec3 PS_TEXCOORD vec3 PS_POS \u9876\u70b9\u7740\u8272\u5668\uff08anim.vs\uff09 \u00b6 \u6e90\u4ee3\u7801 anim.vs 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 uniform mat4 MatrixP ; uniform mat4 MatrixV ; uniform mat4 MatrixW ; uniform vec4 TIMEPARAMS ; uniform vec3 FLOAT_PARAMS ; attribute vec4 POS2D_UV ; // x, y, u + samplerIndex * 2, v varying vec3 PS_TEXCOORD ; varying vec3 PS_POS ; #if defined( FADE_OUT ) uniform mat4 STATIC_WORLD_MATRIX ; varying vec2 FADE_UV ; #endif #if defined( UI_HOLO ) varying vec3 PS_TEXCOORD1 ; #endif #if defined( HOLO ) float filmSkipRand () // This should match the function with the same name in anim.ps { float steps = 12. ; float c = fract ( sin ( ceil ( TIMEPARAMS . x * steps ) / steps ) * 10000. ); return ( c * - .36 ) * step ( .78 , c ); } #endif void main () { vec3 POSITION = vec3 ( POS2D_UV . xy , 0 ); // Take the samplerIndex out of the U. float samplerIndex = floor ( POS2D_UV . z / 2.0 ); vec3 TEXCOORD0 = vec3 ( POS2D_UV . z - 2.0 * samplerIndex , POS2D_UV . w , samplerIndex ); vec3 object_pos = POSITION . xyz ; vec4 world_pos = MatrixW * vec4 ( object_pos , 1.0 ); if ( FLOAT_PARAMS . z > 0.0 ) { float world_x = MatrixW [ 3 ][ 0 ]; float world_z = MatrixW [ 3 ][ 2 ]; world_pos . y += sin ( world_x + world_z + TIMEPARAMS . x * 3.0 ) * 0.025 ; } mat4 mtxPV = MatrixP * MatrixV ; gl_Position = mtxPV * world_pos ; # if defined ( HOLO ) float filmSkipOffset = sin ( filmSkipRand ()) * .4 ; gl_Position . y += filmSkipOffset ; # endif PS_TEXCOORD = TEXCOORD0 ; PS_POS = world_pos . xyz ; #if defined( FADE_OUT ) vec4 static_world_pos = STATIC_WORLD_MATRIX * vec4 ( POSITION . xyz , 1.0 ); vec3 forward = normalize ( vec3 ( MatrixV [ 2 ][ 0 ], 0.0 , MatrixV [ 2 ][ 2 ] ) ); float d = dot ( static_world_pos . xyz , forward ); vec3 pos = static_world_pos . xyz + ( forward * - d ); vec3 left = cross ( forward , vec3 ( 0.0 , 1.0 , 0.0 ) ); FADE_UV = vec2 ( dot ( pos , left ) / 4.0 , static_world_pos . y / 8.0 ); #endif #if defined( UI_HOLO ) PS_TEXCOORD1 = gl_Position . xyw ; #endif } \u9876\u70b9\u7740\u8272\u5668\u4e3b\u8981\u7528\u4e8e\u8ba1\u7b97\u53d8\u6362\u77e9\u9635\u3002 \u5b8f \u00b6 \u6709\u4e00\u4e9b\u5b8f\u5728\u672c\u6587\u4ef6\u4e2d\u6ca1\u6709\u88ab\u542f\u7528\uff0c\u6240\u4ee5\u5ffd\u7565\u3002 FADE_OUT UI_HOLO HOLO main\u51fd\u6570 \u00b6 \u5b8f\u5185\u7684\u4ee3\u7801\u5ffd\u7565\u3002 void main () { // 1. \u89e3\u6790 attribute POS2D_UV // \u8fd9\u4e2a\u53d8\u91cf\u5305\u542b\u4e86\u91c7\u6837\u76f8\u5173\u4fe1\u606f\uff0c\u5982atlas\u7684\u4f4d\u7f6e\u548c\u5e8f\u53f7 vec3 POSITION = vec3 ( POS2D_UV . xy , 0 ); float samplerIndex = floor ( POS2D_UV . z / 2.0 ); // \u5c06\u4fe1\u606f\u4ea4\u7ed9 varying PS_TEXCOORD vec3 TEXCOORD0 = vec3 ( POS2D_UV . z - 2.0 * samplerIndex , POS2D_UV . w , samplerIndex ); // 2. \u8ba1\u7b97\u53d8\u6362\u77e9\u9635 // \u7269\u4f53\u5750\u6807\uff0c\u56e0\u4e3a\u662f\u4e00\u5f20\u7eb8\u7247\uff0c\u6240\u4ee5z\u662f0 vec3 object_pos = POSITION . xyz ; // \u4e16\u754c\u5750\u6807\uff0c\u4e09\u7ef4\u77e9\u9635 vec4 world_pos = MatrixW * vec4 ( object_pos , 1.0 ); // 3. \u8ba1\u7b97\u6f02\u6d6e\u6548\u679c\uff0c\u8fd9\u6bb5\u4f1a\u4f20\u9012\u7ed9 PS_POS if ( FLOAT_PARAMS . z > 0.0 ) { float world_x = MatrixW [ 3 ][ 0 ]; float world_z = MatrixW [ 3 ][ 2 ]; world_pos . y += sin ( world_x + world_z + TIMEPARAMS . x * 3.0 ) * 0.025 ; } // 4. \u8ba1\u7b97\u5176\u4ed6\u7684\u53d8\u6362 mat4 mtxPV = MatrixP * MatrixV ; gl_Position = mtxPV * world_pos ; // 5. \u4f20\u9012 varying \u53d8\u91cf PS_TEXCOORD = TEXCOORD0 ; PS_POS = world_pos . xyz ; } \u50cf\u7d20\u7740\u8272\u5668\uff08anim.ps\uff09 \u00b6 \u6e90\u4ee3\u7801 anim.vsif defined( GL_ES ) precision mediump float ; #endif uniform mat4 MatrixW ; #if defined( TRIPLE_ATLAS ) uniform sampler2D SAMPLER [ 6 ]; #else uniform sampler2D SAMPLER [ 5 ]; #endif #ifndef LIGHTING_H #define LIGHTING_H #if !defined( UI_CC ) // Lighting varying vec3 PS_POS ; #endif // xy = min, zw = max uniform vec4 LIGHTMAP_WORLD_EXTENTS ; #define LIGHTMAP_TEXTURE SAMPLER[3] #ifndef LIGHTMAP_TEXTURE # error If you use lighting , you must # define the sampler that the lightmap belongs to #endif #if defined( UI_CC ) vec3 CalculateLightingContribution ( vec2 pos ) { vec2 uv = ( pos - LIGHTMAP_WORLD_EXTENTS . xy ) * LIGHTMAP_WORLD_EXTENTS . zw ; return texture2D ( LIGHTMAP_TEXTURE , uv . xy ). rgb ; } #else vec3 CalculateLightingContribution () { vec2 uv = ( PS_POS . xz - LIGHTMAP_WORLD_EXTENTS . xy ) * LIGHTMAP_WORLD_EXTENTS . zw ; return texture2D ( LIGHTMAP_TEXTURE , uv . xy ). rgb ; } vec3 CalculateLightingContribution ( vec3 normal ) { return vec3 ( 1 , 1 , 1 ); } #endif #endif //LIGHTING.h varying vec3 PS_TEXCOORD ; uniform vec4 TIMEPARAMS ; uniform vec4 TINT_ADD ; uniform vec4 TINT_MULT ; uniform vec2 PARAMS ; uniform vec3 FLOAT_PARAMS ; uniform vec4 HAUNTPARAMS ; uniform vec4 HAUNTPARAMS2 ; uniform vec4 OCEAN_BLEND_PARAMS ; uniform vec3 CAMERARIGHT ; #define ALPHA_TEST PARAMS.x #define LIGHT_OVERRIDE PARAMS.y #if defined( FADE_OUT ) uniform vec3 EROSION_PARAMS ; varying vec2 FADE_UV ; # if defined ( HOLO ) # define HOLO_SAMPLER SAMPLER [ 2 ] # define HOLO_ERODE_INTENSITY EROSION_PARAMS . x # define HOLO_Y_CUTOFF EROSION_PARAMS . y # define NEGATIVE_HOLO_LERP EROSION_PARAMS . z # else # define ERODE_SAMPLER SAMPLER [ 2 ] # define EROSION_MIN EROSION_PARAMS . x # define EROSION_RANGE EROSION_PARAMS . y # define EROSION_LERP EROSION_PARAMS . z # endif #endif uniform vec4 OCEAN_WORLD_EXTENTS ; #define OCEAN_SAMPLER SAMPLER[4] #if defined( HOLO ) float filmSkipRand () // This should match the function with the same name in anim.vs { float steps = 12. ; float c = fract ( sin ( ceil ( TIMEPARAMS . x * steps ) / steps ) * 10000. ); return ( c * - .36 ) * step ( .78 , c ); } #endif void main () { vec4 colour ; #if defined( TRIPLE_ATLAS ) if ( PS_TEXCOORD . z < 0.5 ) { colour . rgba = texture2D ( SAMPLER [ 0 ], PS_TEXCOORD . xy ); } else if ( PS_TEXCOORD . z < 1.5 ) { colour . rgba = texture2D ( SAMPLER [ 1 ], PS_TEXCOORD . xy ); } else { colour . rgba = texture2D ( SAMPLER [ 5 ], PS_TEXCOORD . xy ); } #else if ( PS_TEXCOORD . z < 0.5 ) { colour . rgba = texture2D ( SAMPLER [ 0 ], PS_TEXCOORD . xy ); } else { colour . rgba = texture2D ( SAMPLER [ 1 ], PS_TEXCOORD . xy ); } #endif if ( FLOAT_PARAMS . y > 0.0 ) { if ( PS_POS . y < FLOAT_PARAMS . x ) { discard ; } } #if defined ( FADE_OUT ) if ( colour . a >= ALPHA_TEST ) #else if ( ALPHA_TEST > 0.0 ) { if ( colour . a >= ALPHA_TEST ) { gl_FragColor = colour . rgba ; } else { discard ; } } else #endif { gl_FragColor . rgba = colour . rgba ; gl_FragColor . rgba *= TINT_MULT . rgba ; gl_FragColor . rgb += vec3 ( TINT_ADD . rgb * colour . a ); #if defined( FADE_OUT ) # if defined ( HOLO ) if ( PS_POS . y < ( .36 - filmSkipRand ()) * .096 + HOLO_Y_CUTOFF ) { discard ; } vec4 orig = gl_FragColor ; vec2 lineUV = vec2 ( FADE_UV . x * 1. , TIMEPARAMS . x * .16 ); float rgbLines = smoothstep ( 1. , .75 , texture2D ( HOLO_SAMPLER , lineUV ). g ); float alphaLines = step ( HOLO_ERODE_INTENSITY - .01 , texture2D ( HOLO_SAMPLER , lineUV ). g ); float filmGrainTime = ceil ( TIMEPARAMS . x * 10. ) * .1 ; // Grain runs on 1/10 framerate float grain = texture2D ( HOLO_SAMPLER , FADE_UV . xy * 1. + mod ( filmGrainTime * 192.7249753 , 9 e4 )). b ; float mask = grain * rgbLines ; gl_FragColor . rgb *= .35 + mask * .65 ; // Color grading gl_FragColor . rgb = mix ( gl_FragColor . rgb , vec3 ( .85 , .68 , .57 ), .05 ); // Fluctuating exposure float exposureAdd = texture2D ( HOLO_SAMPLER , vec2 ( mod ( TIMEPARAMS . x , 1. ), mod ( floor ( TIMEPARAMS . x ) / 256. , 256. ))). r ; gl_FragColor . rgb += vec3 ( exposureAdd * .22 ); float baseAlpha = gl_FragColor . a ; float alpha = baseAlpha * alphaLines ; gl_FragColor = mix ( orig , vec4 ( gl_FragColor . r * alpha , gl_FragColor . g * alpha , gl_FragColor . b * alpha , alpha ), abs ( NEGATIVE_HOLO_LERP )); # else float height = texture2D ( ERODE_SAMPLER , FADE_UV . xy ). a ; float erode_val = clamp ( ( height - EROSION_MIN ) / EROSION_RANGE , 0.0 , 1.0 ); gl_FragColor . rgba = mix ( gl_FragColor . rgba , gl_FragColor . rgba * erode_val , EROSION_LERP ); # endif #endif vec2 world_uv = ( PS_POS . xz - OCEAN_WORLD_EXTENTS . xy ) * OCEAN_WORLD_EXTENTS . zw ; vec3 world_tint = texture2D ( OCEAN_SAMPLER , world_uv ). rgb ; gl_FragColor . rgb = mix ( gl_FragColor . rgb , gl_FragColor . rgb * world_tint . rgb , OCEAN_BLEND_PARAMS . x ); vec3 light = CalculateLightingContribution (); gl_FragColor . rgb *= max ( light . rgb , vec3 ( LIGHT_OVERRIDE , LIGHT_OVERRIDE , LIGHT_OVERRIDE ) ); #if defined( HAUNT ) // first part should move to the vertex shader float xp = PS_POS . x ; float yp = PS_POS . y ; float zp = PS_POS . z ; #if 1 // do it in local space (so moving objects don't expose a world space pattern) float objx = MatrixW [ 3 ][ 0 ]; xp -= objx ; float objz = MatrixW [ 3 ][ 2 ]; zp -= objz ; // Add in a random base to desynchronise identical objects xp += HAUNTPARAMS . y ; zp += HAUNTPARAMS . y ; yp += HAUNTPARAMS . y ; #endif const float PI = 3.1415 ; const float TWO_PI = 2.0 * PI ; xp *= 5. ; yp *= 5. ; zp *= 5. ; float time = HAUNTPARAMS . x ; float cx = CAMERARIGHT . x ; float cz = CAMERARIGHT . z ; float resx = cx * xp ; float resz = cz * zp ; float x = resx + resz ; float y = yp ; // scale the effect x *= HAUNTPARAMS . w ; y *= HAUNTPARAMS . w ; float strength = HAUNTPARAMS . z ; #if defined(BLOOM) // Hmmm, still unsure if it looks better with bloom at a different rate. It adds some obfuscation to the pattern time *= - 2.0 ; #else time *= 3.0 ; #endif float pix = ( ( sin (( x + time * 7.0 ) * HAUNTPARAMS2 . x )) + ( cos (( y + time * 1.5 ) * HAUNTPARAMS2 . y )) + ( sin (( x + y + 3.0 * time ) / ( 16.0 + 0.3 * sin ( time / 100.0 )))) + ( sin ( sqrt (( x * x + y * y )) * HAUNTPARAMS2 . z )) ) / 4.0 ; // either this: pix = 0.5 + 0.5 * sin ( pix * PI ); // or this //pix = 0.5 + 0.5 * pix; //pix = 0.5 + 0.5 * sin(pix * TWO_PI); float orig_a = gl_FragColor . a ; // pix is the new alpha // Take the alpha out of the source pixel gl_FragColor . rgb /= orig_a ; //if (pix > 0.8) pix = 0.8; //if (pix < 0.95) pix = 0.0; float r = gl_FragColor . r ; float g = gl_FragColor . g ; float b = gl_FragColor . b ; float r2 = r * 3.0 ; float g2 = g * 3.0 ; float b2 = b * 3.0 ; vec3 rgb2 = vec3 ( r2 , g2 , b2 ); pix = pix * strength ; gl_FragColor . rgb = ( 1.0 - pix ) * gl_FragColor . rgb + pix * rgb2 ; // Multiply in the original alpha gl_FragColor . r *= orig_a ; gl_FragColor . g *= orig_a ; gl_FragColor . b *= orig_a ; #if defined(BLOOM) // This condition isn't needed but if I take it out opengl errs out because sampler accesses are optimized out // if ((HAUNTPARAMS.y > 0.5)) // 1 in the bloompass. Could also multiply instead { float v = pix ; v *= 0.5 ; v *= orig_a ; v *= strength ; // To stop OpenGL on crapping out on unused samplers..... gl_FragColor = gl_FragColor * 0.0001 + vec4 ( v , v , v , orig_a ) * 0.9999 ; } #endif // To see the plasma #endif } #if defined ( FADE_OUT ) else { discard ; } #endif } \u4ee3\u7801\u6709\u4e00\u70b9\u591a\uff0c\u51b7\u9759\u5206\u6790\u4e00\u4e0b\u3002","title":"\u52a8\u753b\u6e32\u67d3\u89c4\u5219"},{"location":"theme/anim-shader/#_1","text":"","title":"\u52a8\u753b\u6e32\u67d3\u89c4\u5219"},{"location":"theme/anim-shader/#_2","text":"\u672c\u7bc7\u4e0d\u8bb2\u89e3\u5982\u4f55\u5236\u4f5c\u3001\u52a0\u8f7d\u548c\u64ad\u653e\u52a8\u753b\uff0c\u8fd9\u4e9b\u90fd\u5f88\u57fa\u7840\u3002 \u6211\u4eec\u6765\u70b9\u786c\u6838\u7684\uff1a\u5b8c\u5168\u89e3\u6790\u9965\u8352\u52a8\u753b\u7740\u8272\u5668 shaders/anim.ksh\u3002","title":"\u524d\u8a00"},{"location":"theme/anim-shader/#uniform","text":"\u7edf\u4e00\u53d8\u91cf\u7531\u4e3b\u7a0b\u5e8f\u4f20\u5165\u7740\u8272\u5668\uff0c\u5728\u9876\u70b9\u7740\u8272\u5668\u548c\u50cf\u7d20\u7740\u8272\u5668\u4e2d\u90fd\u80fd\u4f7f\u7528\uff0c\u4e14\u5bf9\u4e8e\u6bcf\u4e2a\u6e32\u67d3\u8fdb\u7a0b\u503c\u56fa\u5b9a\u3002\u5728\u7740\u8272\u5668\u4e2d\uff0c\u7edf\u4e00\u53d8\u91cf\u662f \u53ea\u8bfb \u7684\u3002 \u4e0b\u9762\u662f\u9965\u8352\u52a8\u753b\u7740\u8272\u5668\u4f7f\u7528\u7684\u7edf\u4e00\u53d8\u91cf\uff1a \u7c7b\u578b \u53d8\u91cf\u540d \u6765\u6e90 mat4 MatrixP ? mat4 MatrixV ? mat4 MatrixW \u7269\u4f53\u7684\u4e16\u754c\u5750\u6807\uff0c\u53ef\u80fd\u6765\u81ea Transform:GetWorldPosition() vec2 PARAMS ? vec4 TIMEPARAMS \u6e38\u620f\u65f6\u95f4 vec4 TINT_ADD AnimState:SetMultColour(f, f, f, f) vec4 TINT_MULT AnimState:SetAddColour(f, f, f, f) vec3 FLOAT_PARAMS AnimState:SetFloatParams(f, f, f) vec4 HAUNTPARAMS \u4f5c\u795f vec4 HAUNTPARAMS2 \u4f5c\u795f vec4 OCEAN_BLEND_PARAMS AnimState:SetOceanBlendParams(f) vec3 CAMERARIGHT \u5728\u4e0b\u9762\u7684\u6e90\u7801\u5206\u6790\u4e2d\uff0c\u6211\u4eec\u770b\u770b\u8fd9\u4e9b\u53d8\u91cf\u662f\u5982\u4f55\u53d1\u6325\u4f5c\u7528\u7684\u3002","title":"uniform \u53d8\u91cf"},{"location":"theme/anim-shader/#varying","text":"\u7528\u4e8e\u628a\u4e00\u4e9b\u4fe1\u606f\u4ece\u9876\u70b9\u7740\u8272\u5668\u4f20\u9012\u5230\u50cf\u7d20\u7740\u8272\u5668\u3002\u5728\u9876\u70b9\u7740\u8272\u5668\u4e2d\u5199\uff0c\u5728\u50cf\u7d20\u7740\u8272\u5668\u4e2d\u8bfb\u3002 \u7c7b\u578b \u53d8\u91cf\u540d vec3 PS_TEXCOORD vec3 PS_POS","title":"varying \u53d8\u91cf"},{"location":"theme/anim-shader/#animvs","text":"\u6e90\u4ee3\u7801 anim.vs 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 uniform mat4 MatrixP ; uniform mat4 MatrixV ; uniform mat4 MatrixW ; uniform vec4 TIMEPARAMS ; uniform vec3 FLOAT_PARAMS ; attribute vec4 POS2D_UV ; // x, y, u + samplerIndex * 2, v varying vec3 PS_TEXCOORD ; varying vec3 PS_POS ; #if defined( FADE_OUT ) uniform mat4 STATIC_WORLD_MATRIX ; varying vec2 FADE_UV ; #endif #if defined( UI_HOLO ) varying vec3 PS_TEXCOORD1 ; #endif #if defined( HOLO ) float filmSkipRand () // This should match the function with the same name in anim.ps { float steps = 12. ; float c = fract ( sin ( ceil ( TIMEPARAMS . x * steps ) / steps ) * 10000. ); return ( c * - .36 ) * step ( .78 , c ); } #endif void main () { vec3 POSITION = vec3 ( POS2D_UV . xy , 0 ); // Take the samplerIndex out of the U. float samplerIndex = floor ( POS2D_UV . z / 2.0 ); vec3 TEXCOORD0 = vec3 ( POS2D_UV . z - 2.0 * samplerIndex , POS2D_UV . w , samplerIndex ); vec3 object_pos = POSITION . xyz ; vec4 world_pos = MatrixW * vec4 ( object_pos , 1.0 ); if ( FLOAT_PARAMS . z > 0.0 ) { float world_x = MatrixW [ 3 ][ 0 ]; float world_z = MatrixW [ 3 ][ 2 ]; world_pos . y += sin ( world_x + world_z + TIMEPARAMS . x * 3.0 ) * 0.025 ; } mat4 mtxPV = MatrixP * MatrixV ; gl_Position = mtxPV * world_pos ; # if defined ( HOLO ) float filmSkipOffset = sin ( filmSkipRand ()) * .4 ; gl_Position . y += filmSkipOffset ; # endif PS_TEXCOORD = TEXCOORD0 ; PS_POS = world_pos . xyz ; #if defined( FADE_OUT ) vec4 static_world_pos = STATIC_WORLD_MATRIX * vec4 ( POSITION . xyz , 1.0 ); vec3 forward = normalize ( vec3 ( MatrixV [ 2 ][ 0 ], 0.0 , MatrixV [ 2 ][ 2 ] ) ); float d = dot ( static_world_pos . xyz , forward ); vec3 pos = static_world_pos . xyz + ( forward * - d ); vec3 left = cross ( forward , vec3 ( 0.0 , 1.0 , 0.0 ) ); FADE_UV = vec2 ( dot ( pos , left ) / 4.0 , static_world_pos . y / 8.0 ); #endif #if defined( UI_HOLO ) PS_TEXCOORD1 = gl_Position . xyw ; #endif } \u9876\u70b9\u7740\u8272\u5668\u4e3b\u8981\u7528\u4e8e\u8ba1\u7b97\u53d8\u6362\u77e9\u9635\u3002","title":"\u9876\u70b9\u7740\u8272\u5668\uff08anim.vs\uff09"},{"location":"theme/anim-shader/#_3","text":"\u6709\u4e00\u4e9b\u5b8f\u5728\u672c\u6587\u4ef6\u4e2d\u6ca1\u6709\u88ab\u542f\u7528\uff0c\u6240\u4ee5\u5ffd\u7565\u3002 FADE_OUT UI_HOLO HOLO","title":"\u5b8f"},{"location":"theme/anim-shader/#main","text":"\u5b8f\u5185\u7684\u4ee3\u7801\u5ffd\u7565\u3002 void main () { // 1. \u89e3\u6790 attribute POS2D_UV // \u8fd9\u4e2a\u53d8\u91cf\u5305\u542b\u4e86\u91c7\u6837\u76f8\u5173\u4fe1\u606f\uff0c\u5982atlas\u7684\u4f4d\u7f6e\u548c\u5e8f\u53f7 vec3 POSITION = vec3 ( POS2D_UV . xy , 0 ); float samplerIndex = floor ( POS2D_UV . z / 2.0 ); // \u5c06\u4fe1\u606f\u4ea4\u7ed9 varying PS_TEXCOORD vec3 TEXCOORD0 = vec3 ( POS2D_UV . z - 2.0 * samplerIndex , POS2D_UV . w , samplerIndex ); // 2. \u8ba1\u7b97\u53d8\u6362\u77e9\u9635 // \u7269\u4f53\u5750\u6807\uff0c\u56e0\u4e3a\u662f\u4e00\u5f20\u7eb8\u7247\uff0c\u6240\u4ee5z\u662f0 vec3 object_pos = POSITION . xyz ; // \u4e16\u754c\u5750\u6807\uff0c\u4e09\u7ef4\u77e9\u9635 vec4 world_pos = MatrixW * vec4 ( object_pos , 1.0 ); // 3. \u8ba1\u7b97\u6f02\u6d6e\u6548\u679c\uff0c\u8fd9\u6bb5\u4f1a\u4f20\u9012\u7ed9 PS_POS if ( FLOAT_PARAMS . z > 0.0 ) { float world_x = MatrixW [ 3 ][ 0 ]; float world_z = MatrixW [ 3 ][ 2 ]; world_pos . y += sin ( world_x + world_z + TIMEPARAMS . x * 3.0 ) * 0.025 ; } // 4. \u8ba1\u7b97\u5176\u4ed6\u7684\u53d8\u6362 mat4 mtxPV = MatrixP * MatrixV ; gl_Position = mtxPV * world_pos ; // 5. \u4f20\u9012 varying \u53d8\u91cf PS_TEXCOORD = TEXCOORD0 ; PS_POS = world_pos . xyz ; }","title":"main\u51fd\u6570"},{"location":"theme/anim-shader/#animps","text":"\u6e90\u4ee3\u7801 anim.vsif defined( GL_ES ) precision mediump float ; #endif uniform mat4 MatrixW ; #if defined( TRIPLE_ATLAS ) uniform sampler2D SAMPLER [ 6 ]; #else uniform sampler2D SAMPLER [ 5 ]; #endif #ifndef LIGHTING_H #define LIGHTING_H #if !defined( UI_CC ) // Lighting varying vec3 PS_POS ; #endif // xy = min, zw = max uniform vec4 LIGHTMAP_WORLD_EXTENTS ; #define LIGHTMAP_TEXTURE SAMPLER[3] #ifndef LIGHTMAP_TEXTURE # error If you use lighting , you must # define the sampler that the lightmap belongs to #endif #if defined( UI_CC ) vec3 CalculateLightingContribution ( vec2 pos ) { vec2 uv = ( pos - LIGHTMAP_WORLD_EXTENTS . xy ) * LIGHTMAP_WORLD_EXTENTS . zw ; return texture2D ( LIGHTMAP_TEXTURE , uv . xy ). rgb ; } #else vec3 CalculateLightingContribution () { vec2 uv = ( PS_POS . xz - LIGHTMAP_WORLD_EXTENTS . xy ) * LIGHTMAP_WORLD_EXTENTS . zw ; return texture2D ( LIGHTMAP_TEXTURE , uv . xy ). rgb ; } vec3 CalculateLightingContribution ( vec3 normal ) { return vec3 ( 1 , 1 , 1 ); } #endif #endif //LIGHTING.h varying vec3 PS_TEXCOORD ; uniform vec4 TIMEPARAMS ; uniform vec4 TINT_ADD ; uniform vec4 TINT_MULT ; uniform vec2 PARAMS ; uniform vec3 FLOAT_PARAMS ; uniform vec4 HAUNTPARAMS ; uniform vec4 HAUNTPARAMS2 ; uniform vec4 OCEAN_BLEND_PARAMS ; uniform vec3 CAMERARIGHT ; #define ALPHA_TEST PARAMS.x #define LIGHT_OVERRIDE PARAMS.y #if defined( FADE_OUT ) uniform vec3 EROSION_PARAMS ; varying vec2 FADE_UV ; # if defined ( HOLO ) # define HOLO_SAMPLER SAMPLER [ 2 ] # define HOLO_ERODE_INTENSITY EROSION_PARAMS . x # define HOLO_Y_CUTOFF EROSION_PARAMS . y # define NEGATIVE_HOLO_LERP EROSION_PARAMS . z # else # define ERODE_SAMPLER SAMPLER [ 2 ] # define EROSION_MIN EROSION_PARAMS . x # define EROSION_RANGE EROSION_PARAMS . y # define EROSION_LERP EROSION_PARAMS . z # endif #endif uniform vec4 OCEAN_WORLD_EXTENTS ; #define OCEAN_SAMPLER SAMPLER[4] #if defined( HOLO ) float filmSkipRand () // This should match the function with the same name in anim.vs { float steps = 12. ; float c = fract ( sin ( ceil ( TIMEPARAMS . x * steps ) / steps ) * 10000. ); return ( c * - .36 ) * step ( .78 , c ); } #endif void main () { vec4 colour ; #if defined( TRIPLE_ATLAS ) if ( PS_TEXCOORD . z < 0.5 ) { colour . rgba = texture2D ( SAMPLER [ 0 ], PS_TEXCOORD . xy ); } else if ( PS_TEXCOORD . z < 1.5 ) { colour . rgba = texture2D ( SAMPLER [ 1 ], PS_TEXCOORD . xy ); } else { colour . rgba = texture2D ( SAMPLER [ 5 ], PS_TEXCOORD . xy ); } #else if ( PS_TEXCOORD . z < 0.5 ) { colour . rgba = texture2D ( SAMPLER [ 0 ], PS_TEXCOORD . xy ); } else { colour . rgba = texture2D ( SAMPLER [ 1 ], PS_TEXCOORD . xy ); } #endif if ( FLOAT_PARAMS . y > 0.0 ) { if ( PS_POS . y < FLOAT_PARAMS . x ) { discard ; } } #if defined ( FADE_OUT ) if ( colour . a >= ALPHA_TEST ) #else if ( ALPHA_TEST > 0.0 ) { if ( colour . a >= ALPHA_TEST ) { gl_FragColor = colour . rgba ; } else { discard ; } } else #endif { gl_FragColor . rgba = colour . rgba ; gl_FragColor . rgba *= TINT_MULT . rgba ; gl_FragColor . rgb += vec3 ( TINT_ADD . rgb * colour . a ); #if defined( FADE_OUT ) # if defined ( HOLO ) if ( PS_POS . y < ( .36 - filmSkipRand ()) * .096 + HOLO_Y_CUTOFF ) { discard ; } vec4 orig = gl_FragColor ; vec2 lineUV = vec2 ( FADE_UV . x * 1. , TIMEPARAMS . x * .16 ); float rgbLines = smoothstep ( 1. , .75 , texture2D ( HOLO_SAMPLER , lineUV ). g ); float alphaLines = step ( HOLO_ERODE_INTENSITY - .01 , texture2D ( HOLO_SAMPLER , lineUV ). g ); float filmGrainTime = ceil ( TIMEPARAMS . x * 10. ) * .1 ; // Grain runs on 1/10 framerate float grain = texture2D ( HOLO_SAMPLER , FADE_UV . xy * 1. + mod ( filmGrainTime * 192.7249753 , 9 e4 )). b ; float mask = grain * rgbLines ; gl_FragColor . rgb *= .35 + mask * .65 ; // Color grading gl_FragColor . rgb = mix ( gl_FragColor . rgb , vec3 ( .85 , .68 , .57 ), .05 ); // Fluctuating exposure float exposureAdd = texture2D ( HOLO_SAMPLER , vec2 ( mod ( TIMEPARAMS . x , 1. ), mod ( floor ( TIMEPARAMS . x ) / 256. , 256. ))). r ; gl_FragColor . rgb += vec3 ( exposureAdd * .22 ); float baseAlpha = gl_FragColor . a ; float alpha = baseAlpha * alphaLines ; gl_FragColor = mix ( orig , vec4 ( gl_FragColor . r * alpha , gl_FragColor . g * alpha , gl_FragColor . b * alpha , alpha ), abs ( NEGATIVE_HOLO_LERP )); # else float height = texture2D ( ERODE_SAMPLER , FADE_UV . xy ). a ; float erode_val = clamp ( ( height - EROSION_MIN ) / EROSION_RANGE , 0.0 , 1.0 ); gl_FragColor . rgba = mix ( gl_FragColor . rgba , gl_FragColor . rgba * erode_val , EROSION_LERP ); # endif #endif vec2 world_uv = ( PS_POS . xz - OCEAN_WORLD_EXTENTS . xy ) * OCEAN_WORLD_EXTENTS . zw ; vec3 world_tint = texture2D ( OCEAN_SAMPLER , world_uv ). rgb ; gl_FragColor . rgb = mix ( gl_FragColor . rgb , gl_FragColor . rgb * world_tint . rgb , OCEAN_BLEND_PARAMS . x ); vec3 light = CalculateLightingContribution (); gl_FragColor . rgb *= max ( light . rgb , vec3 ( LIGHT_OVERRIDE , LIGHT_OVERRIDE , LIGHT_OVERRIDE ) ); #if defined( HAUNT ) // first part should move to the vertex shader float xp = PS_POS . x ; float yp = PS_POS . y ; float zp = PS_POS . z ; #if 1 // do it in local space (so moving objects don't expose a world space pattern) float objx = MatrixW [ 3 ][ 0 ]; xp -= objx ; float objz = MatrixW [ 3 ][ 2 ]; zp -= objz ; // Add in a random base to desynchronise identical objects xp += HAUNTPARAMS . y ; zp += HAUNTPARAMS . y ; yp += HAUNTPARAMS . y ; #endif const float PI = 3.1415 ; const float TWO_PI = 2.0 * PI ; xp *= 5. ; yp *= 5. ; zp *= 5. ; float time = HAUNTPARAMS . x ; float cx = CAMERARIGHT . x ; float cz = CAMERARIGHT . z ; float resx = cx * xp ; float resz = cz * zp ; float x = resx + resz ; float y = yp ; // scale the effect x *= HAUNTPARAMS . w ; y *= HAUNTPARAMS . w ; float strength = HAUNTPARAMS . z ; #if defined(BLOOM) // Hmmm, still unsure if it looks better with bloom at a different rate. It adds some obfuscation to the pattern time *= - 2.0 ; #else time *= 3.0 ; #endif float pix = ( ( sin (( x + time * 7.0 ) * HAUNTPARAMS2 . x )) + ( cos (( y + time * 1.5 ) * HAUNTPARAMS2 . y )) + ( sin (( x + y + 3.0 * time ) / ( 16.0 + 0.3 * sin ( time / 100.0 )))) + ( sin ( sqrt (( x * x + y * y )) * HAUNTPARAMS2 . z )) ) / 4.0 ; // either this: pix = 0.5 + 0.5 * sin ( pix * PI ); // or this //pix = 0.5 + 0.5 * pix; //pix = 0.5 + 0.5 * sin(pix * TWO_PI); float orig_a = gl_FragColor . a ; // pix is the new alpha // Take the alpha out of the source pixel gl_FragColor . rgb /= orig_a ; //if (pix > 0.8) pix = 0.8; //if (pix < 0.95) pix = 0.0; float r = gl_FragColor . r ; float g = gl_FragColor . g ; float b = gl_FragColor . b ; float r2 = r * 3.0 ; float g2 = g * 3.0 ; float b2 = b * 3.0 ; vec3 rgb2 = vec3 ( r2 , g2 , b2 ); pix = pix * strength ; gl_FragColor . rgb = ( 1.0 - pix ) * gl_FragColor . rgb + pix * rgb2 ; // Multiply in the original alpha gl_FragColor . r *= orig_a ; gl_FragColor . g *= orig_a ; gl_FragColor . b *= orig_a ; #if defined(BLOOM) // This condition isn't needed but if I take it out opengl errs out because sampler accesses are optimized out // if ((HAUNTPARAMS.y > 0.5)) // 1 in the bloompass. Could also multiply instead { float v = pix ; v *= 0.5 ; v *= orig_a ; v *= strength ; // To stop OpenGL on crapping out on unused samplers..... gl_FragColor = gl_FragColor * 0.0001 + vec4 ( v , v , v , orig_a ) * 0.9999 ; } #endif // To see the plasma #endif } #if defined ( FADE_OUT ) else { discard ; } #endif } \u4ee3\u7801\u6709\u4e00\u70b9\u591a\uff0c\u51b7\u9759\u5206\u6790\u4e00\u4e0b\u3002","title":"\u50cf\u7d20\u7740\u8272\u5668\uff08anim.ps\uff09"},{"location":"theme/key/","text":"\u6709\u4e00\u4e9bmod\u4f1a\u4f7f\u7528\u6309\u952e\u89e6\u53d1\u4e00\u4e9b\u6548\u679c\uff0c\u8fd9\u662f\u5f88\u5bb9\u6613\u5b9e\u73b0\u7684\u3002 \u6309\u952e\u7684\u5b9a\u4e49 \u00b6 \u70b9\u51fb\u9f20\u6807\u3001\u6309\u4e0b\u6309\u952e\u3001\u79fb\u52a8\u624b\u67c4\u7b49\u64cd\u4f5c\uff0c\u5728\u6e38\u620f\u91cc\u88ab\u89c6\u4f5c\u4e00\u79cd\u8f93\u5165\uff0c\u5b83\u4eec\u90fd\u4f1a\u7528\u4e00\u4e2a\u6574\u6570\u8868\u793a\uff0c\u53c2\u8003 constants.lua constants.lua -- 81\u884c CONTROL_PRIMARY = 0 -- \u4e3b\u52a8\u4f5c\uff0c\u9ed8\u8ba4\u7ed1\u5b9a\u5728\u9f20\u6807\u5de6\u952e CONTROL_SECONDARY = 1 -- \u526f\u52a8\u4f5c\uff0c\u9ed8\u8ba4\u7ed1\u5b9a\u5728\u9f20\u6807\u53f3\u952e CONTROL_ATTACK = 2 -- \u653b\u51fb\uff0c\u9ed8\u8ba4\u7ed1\u5b9a\u5728F -- ... -- 246\u884c KEY_A = 97 -- \u6309\u4e0b\u6216\u677e\u5f00A KEY_B = 98 -- \u6309\u4e0b\u6216\u677e\u5f00B KEY_C = 99 KEY_D = 100 KEY_E = 101 KEY_F = 102 KEY_G = 103 KEY_H = 104 \u6ce8\u610f CONTROL_ \u5f00\u5934\u7684\u53d8\u91cf\u548c KEY_ \u5f00\u5934\u7684\u53d8\u91cf\u6709\u4e00\u4e9b\u5fae\u5999\u7684\u533a\u522b\u3002 KEY_F \u53ea\u4f1a\u5728\u6309\u4e0b\u548c\u677e\u5f00F\u952e\u7684\u65f6\u5019\u89e6\u53d1\u3002 CONTROL_ATTACK \u4f1a\u5728\u6309\u4e0b\u548c\u677e\u5f00 \u653b\u51fb\u952e \u7684\u65f6\u5019\u89e6\u53d1\uff0c\u9ed8\u8ba4F\uff0c\u4f46\u5982\u679c\u73a9\u5bb6\u5728\u8bbe\u7f6e\u9762\u677f\u4e2d\u628a\u653b\u51fb\u952e\u6539\u6210\u4e86J\uff0c\u90a3\u4e48\u6309\u4e0bJ\u624d\u4f1a\u89e6\u53d1 CONTROL_ATTACK \u3002 \u5728\u672c\u7ae0\u8282\uff0c\u6211\u4eec\u53ea\u5173\u6ce8 KEY_ \u5f00\u5934\u7684\u53d8\u91cf\u3002 \u76d1\u542c\u5668 \u00b6 \u5728 input.lua \u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e9b\u51fd\u6570\uff0c\u53ef\u4ee5\u7528\u6765\u76d1\u542c\u6309\u952e\u7684\u6309\u4e0b\u548c\u677e\u5f00\u3002 TheInput:AddKeyHandler(fn) -> hander:table \u00b6 \u6dfb\u52a0\u4e00\u4e2a\u901a\u7528\u6309\u952e\u76d1\u542c\u5668\uff0c\u5f53\u4efb\u610f\u6309\u952e\u88ab\u6309\u4e0b\u6216\u677e\u5f00\u65f6\uff0cfn\u5c31\u4f1a\u88ab\u8c03\u7528\uff0c\u4f20\u5165\u4e24\u4e2a\u53c2\u6570\uff1akey:int\uff08\u6309\u952e\u503c\uff09\uff0cdown:boolean\uff08\u662f\u5426\u88ab\u6309\u4e0b\uff09\u3002 \u8be5\u51fd\u6570\u4f1a\u8fd4\u56de\u4e00\u4e2a\u76d1\u542c\u5668\u5bf9\u8c61\u3002 \u8bd5\u4e00\u8bd5 \u542f\u52a8\u9965\u8352\uff0c\u8fdb\u5165\u6e38\u620f\u4e3b\u754c\u9762\uff08\u4e0d\u9700\u8981\u8fdb\u4e16\u754c\uff09\uff0c\u5728\u63a7\u5236\u53f0\u8fd0\u884c\u5982\u4e0b\u4ee3\u7801\uff1a TheInput : AddKeyHandler ( print ) \u6309ctrl+L\u6253\u5f00\u8f93\u51fa\u9762\u677f\uff0c\u7136\u540e\u968f\u610f\u7684\u6572\u51fb\u952e\u76d8\u6309\u952e\uff0c\u4ed4\u7ec6\u89c2\u5bdf\u8f93\u51fa\u9762\u677f\u6253\u5370\u7684\u5185\u5bb9\u3002 \u957f\u6309 \u67d0\u4e2a\u6309\u952e\uff08\u6bd4\u5982F\uff09\uff0c\u770b\u770b\u8f93\u51fa\u9762\u677f\u4f1a\u6253\u5370\u4ec0\u4e48\uff1f \u518d\u6b21\u8fd0\u884c\u4e00\u904d\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u770b\u770b\u53d1\u751f\u4e86\u4ec0\u4e48\u53d8\u5316\uff1f TheInput:AddKeyDownHandler(key:int, fn) -> handler:table \u00b6 \u6dfb\u52a0\u4e00\u4e2a\u7279\u5b9a\u6309\u952e\u7684\u76d1\u542c\u5668\uff0c\u5f53key\u88ab\u6309\u4e0b\u7684\u65f6\u5019\uff0cfn\u5c31\u4f1a\u88ab\u8c03\u7528\uff0c\u65e0\u53c2\u6570\u3002 \u8be5\u51fd\u6570\u4e5f\u4f1a\u8fd4\u56de\u4e00\u4e2a\u76d1\u542c\u5668\u5bf9\u8c61\u3002 \u8bd5\u4e00\u8bd5 \u8fd9\u91cc\u7b80\u5355\u76d1\u542c\u4e00\u4e0bA\u6309\u952e\u3002 \u542f\u52a8\u9965\u8352\uff0c\u5982\u679c\u5df2\u7ecf\u542f\u52a8\u8fc7\u4e86\uff0c\u5728\u63a7\u5236\u53f0\u8fd0\u884c\u5982\u4e0b\u4ee3\u7801\uff1a c_reset () \u7b49\u5f85\u6e38\u620f\u91cd\u542f\u540e\uff0c\u8fd0\u884c\u5982\u4e0b\u4ee3\u7801\uff1a TheInput : AddKeyDownHandler ( KEY_A , function () print ( \"A \u88ab\u6309\u4e0b\u4e86\" , GetTick ()) end ) \u6309\u4e0b\u6216\u8005\u677e\u5f00A\uff0c\u770b\u770b\u8f93\u51fa\u9762\u677f\u6253\u5370\u4e86\u4ec0\u4e48\uff1f \u518d\u6b21\u8fd0\u884c\u4e00\u904d\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u770b\u770b\u53d1\u751f\u4e86\u4ec0\u4e48\u53d8\u5316\uff0c\u548c\u4f60\u7684\u9884\u671f\u4e00\u81f4\u5417\uff1f Warning GetTick() \u51fd\u6570\u8fd4\u56de\u5f53\u524d\u7684\u5e27\u65f6\u95f4\uff0c\u6267\u884c\u8fd9\u4e2a\u51fd\u6570\u662f\u4e3a\u4e86\u533a\u5206\u6bcf\u4e00\u6b21\u7684\u6253\u5370\uff0c\u5e76\u6ca1\u6709\u5176\u4ed6\u6548\u679c\u3002 TheInput:AddKeyUpHandler(key:int, fn) -> handler:table \u00b6 \u6dfb\u52a0\u4e00\u4e2a\u7279\u5b9a\u6309\u952e\u7684\u76d1\u542c\u5668\uff0c\u5f53key\u88ab \u677e\u5f00 \u7684\u65f6\u5019\uff0cfn\u5c31\u4f1a\u88ab\u8c03\u7528\uff0c\u65e0\u53c2\u6570\u3002 \u8be5\u51fd\u6570\u8fd8\u662f\u4f1a\u8fd4\u56de\u4e00\u4e2a\u76d1\u542c\u5668\u5bf9\u8c61\u3002 \u8fd9\u4e2a\u51fd\u6570\u548c TheInput:AddKeyDownHandler \u975e\u5e38\u7c7b\u4f3c\uff0c\u53ea\u4e0d\u8fc7\u5728\u6309\u952e\u677e\u5f00\u65f6\u624d\u89e6\u53d1\u3002 \u8bd5\u4e00\u8bd5 \u542f\u52a8\u9965\u8352\uff0c\u5982\u679c\u5df2\u7ecf\u542f\u52a8\u8fc7\u4e86\uff0c\u5728\u63a7\u5236\u53f0\u8fd0\u884c\u5982\u4e0b\u4ee3\u7801\uff1a c_reset () \u7b49\u5f85\u6e38\u620f\u91cd\u542f\u540e\uff0c\u8fd0\u884c\u5982\u4e0b\u4ee3\u7801\uff1a TheInput : AddKeyUpHandler ( KEY_A , function () print ( \"A \u88ab\u677e\u5f00\u4e86\" , GetTick ()) end ) \u6309\u4e0b\u6216\u8005\u677e\u5f00A\uff0c\u770b\u770b\u8f93\u51fa\u9762\u677f\u6253\u5370\u4e86\u4ec0\u4e48\uff1f \u518d\u6b21\u8fd0\u884c\u4e00\u904d\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u770b\u770b\u53d1\u751f\u4e86\u4ec0\u4e48\u53d8\u5316\uff0c\u548c\u4f60\u7684\u9884\u671f\u4e00\u81f4\u5417\uff1f \u4e0a\u9762\u8fd9\u4e9b\u77e5\u8bc6\u90fd \u4e0d\u91cd\u8981\uff01 \u00b6 \u6309\u952e\u76d1\u542c\u5668\u662f\u4e00\u4e2a\u6bd4\u8f83\u5e95\u5c42\u7684\u4e1c\u897f\uff0c\u5728\u5165\u95e8\u7ea7\u7684mod\u5f00\u53d1\u4e2d\u5e76\u4e0d\u4f1a\u4f7f\u7528\u5b83\uff0c\u56e0\u4e3a\uff0c\u5f53\u76d1\u542c\u5668\u8bc6\u522b\u5230A\u952e\u88ab\u6309\u4e0b\u65f6\uff1a \u6e38\u620f\u53ef\u80fd\u5728\u4e3b\u754c\u9762\u6216\u8005\u662f\u5176\u4ed6\u914d\u7f6e\u754c\u9762\uff08\u73a9\u5bb6\u8fd8\u672a\u521b\u5efa\uff09 \u73a9\u5bb6\u53ef\u80fd\u5728\u804a\u5929\u6846\u6253\u5b57\uff0c\u8f93\u5165\u4e86\u4e00\u4e2aA \u73a9\u5bb6\u53ef\u80fd\u5728\u63a7\u5236\u53f0\u6572\u6307\u4ee4\uff0c\u8f93\u5165\u4e86\u4e00\u4e2aA \u73a9\u5bb6\u53ef\u80fd\u6309\u4e0bA\u6765\u5411\u5de6\u79fb\u52a8 \u53ef\u80fd\u8fd8\u6709\u5176\u4ed6\u9a9a\u64cd\u4f5c... \u6309\u952e\u76d1\u542c\u5668\u5e76\u4e0d\u80fd\u5b8c\u7f8e\u7684\u533a\u5206\u8fd9\u4e9b\u4e0d\u540c\u7684\u60c5\u5f62\uff0c\u6240\u4ee5\u5e76\u4e0d\u5e38\u7528\u3002 \u628a\u4e0a\u9762\u8fd9\u4e9b\u6682\u65f6\u5fd8\u6389\u5427\u3002 \u6e38\u620f\u5185\u76d1\u542c\u5668 \u00b6 \u8fd9\u91cc\u5b9e\u73b0\u4e00\u4e2a\u7b80\u5355\u7684\u529f\u80fd\uff1a \u5f53\u6309\u952eA\u88ab\u6309\u4e0b\u65f6\uff0c\u5f53\u524d\u73a9\u5bb6\u7684\u751f\u547d\u503c\u626310 \u3002 \u6807\u51c6 \u00b6 \u4e00\u4e2a\u5408\u683c\u7684\u6e38\u620f\u5185\u6309\u952e\u76d1\u542c\u5668\u5e94\u8be5\u7b26\u5408\u4ee5\u4e0b\u6807\u51c6\uff1a \u5f53\u73a9\u5bb6\u52a0\u5165\u4e16\u754c\u65f6\u624d\u751f\u6548\uff0c\u5f53\u73a9\u5bb6\u79bb\u5f00\u65f6\u81ea\u52a8\u79fb\u9664\u3002 \u53ea\u5728\u8fdb\u5165\u4e16\u754c\u540e\u624d\u751f\u6548\uff0c\u5728\u6e38\u620f\u4e3b\u754c\u9762\u65e0\u6548\u679c\u3002 \u5f53\u73a9\u5bb6\u5728\u6682\u505c\u9875\u9762\u6216\u8bbe\u7f6e\u9875\u9762\u64cd\u4f5c\u65f6\uff0c\u4e0d\u4f1a\u6709\u53cd\u5e94\u3002 \u5f53\u73a9\u5bb6\u5728\u804a\u5929\u6846\u6216\u63a7\u5236\u53f0\u7b49\u8f93\u5165\u6846\u4e2d\u6253\u5b57\u65f6\uff0c\u4e0d\u4f1a\u6709\u53cd\u5e94\u3002 \u4e3a\u4e86\u5b9e\u73b01/2/3\uff0c\u6211\u4eec\u5c06\u6309\u952e\u76d1\u542c\u5668\u7ed1\u5b9a\u5230\u73a9\u5bb6\u754c\u9762: screens/playerhud\u3002 \u4e3a\u4e86\u5b9e\u73b04\uff0c\u901a\u8fc7\u4fee\u6539 OnRawKey() \u51fd\u6570\u6392\u9664\u8f93\u5165\u6846\u3002 \u539f\u7406 \u00b6 \u73a9\u5bb6\u754c\u9762 \u662f\u663e\u793a\u73a9\u5bb6\u4fe1\u606f\u548c\u4e00\u4e9b\u64cd\u4f5c\u7684\u9762\u677f\uff0c\u5b83\u5305\u542b\u4e86\u53f3\u4e0a\u89d2\u4e09\u56f4\u56fe\u6807\u3001\u65f6\u949f\u56fe\u6807\uff0c\u5de6\u4fa7\u5236\u9020\u680f\uff0c\u4e0b\u65b9\u7269\u54c1\u680f\uff0c\u53f3\u4fa7\u80cc\u5305\u680f\uff0c\u5de6\u4e0b\u804a\u5929\u6846\uff0c\u53f3\u4e0b\u6682\u505c\u952e\u3001\u5730\u56fe\u6309\u94ae\uff0c\u4ee5\u53ca\u8fc7\u70ed\u3001\u8fc7\u51b7\u3001\u70e7\u4f24\u3001\u53d7\u4f24\u7b49\u65f6\u673a\u4e0b\u89e6\u53d1\u7684\u5168\u5c4f\u7279\u6548\u63d0\u793a\u3002 \u73a9\u5bb6\u754c\u9762\u4ec5\u5728\u73a9\u5bb6\u52a0\u5165\u4e16\u754c\u540e\u624d\u4f1a\u88ab\u521b\u5efa\u3002 \u4e3b\u754c\u9762\u4e0a\u6ca1\u6709\u73a9\u5bb6\u754c\u9762\uff0c\u8fdb\u5165\u4e16\u754c\u540e\u624d\u6709\u3002 \u5f53\u6682\u505c\u9875\u9762\u6216\u8005\u8bbe\u7f6e\u9875\u9762\u663e\u793a\u7684\u65f6\u5019\uff0c\u73a9\u5bb6\u754c\u9762\u4f1a\u88ab\u76d6\u4f4f\uff0c\u4e00\u5207\u8f93\u5165\u63a7\u5236\u4f1a\u88ab\u4e0a\u65b9\u7684\u754c\u9762\u963b\u65ad\u3002 \u56e0\u6b64\uff0c\u5b8c\u7f8e\u7b26\u5408\u6807\u51c6\u3002 \u63a5\u7740\uff0c\u770b\u4e00\u4e0b PlayerHud:OnRawKey() \u51fd\u6570\u7684\u5b9a\u4e49\uff1a screens/playerhud.lua 1 2 3 4 5 6 7 8 9 10 function PlayerHud : OnRawKey ( key , down ) if PlayerHud . _base . OnRawKey ( self , key , down ) then return true elseif down and self . shown and key == KEY_SEMICOLON and TheInput : IsKeyDown ( KEY_SHIFT ) then local chat_input_screen = ChatInputScreen ( false ) chat_input_screen . chat_edit : SetString ( \":\" ) TheFrontEnd : PushScreen ( chat_input_screen ) return true end end \u4e0d\u9700\u8981\u6df1\u5165\u4e86\u89e3\u8fd9\u4e2a\u51fd\u6570\u7684\u7ec6\u8282\uff0c\u53ea\u9700\u8981\u6ce8\u610f\u4e00\u70b9\uff1a\u5f53 OnRawKey() \u51fd\u6570\u201c \u5e72\u4e86\u4ec0\u4e48\u4e8b\u60c5 \u201d\u7684\u65f6\u5019\uff0c\u5b83\u4f1a\u8fd4\u56de true \u3002 \u663e\u7136\uff0c\u5728\u8f93\u5165\u6846\u6253\u5b57\u4e5f\u7b97\u201c\u5e72\u4e86\u4ec0\u4e48\u4e8b\u60c5\u201d\uff0c\u6240\u4ee5\u4e3a\u4e86\u6392\u9664\u8fd9\u79cd\u60c5\u51b5\uff0c\u5f53 OnRawKey() \u51fd\u6570\u8fd4\u56de true \u65f6\uff0c \u4e0d\u89e6\u53d1 \u6309\u952e\u76d1\u542c\u5668\uff0c\u5426\u5219\u89e6\u53d1\u3002\u4e86\u89e3\u539f\u7406\u540e\uff0c\u6211\u4eec\u8fdb\u5165\u5b9e\u6218\u90e8\u5206\u3002 \u5b9e\u6218 \u00b6 \u8bbe\u7f6e\u76d1\u542c\u5668 \u00b6 \u521b\u5efa\u4e00\u4e2a\u65b0mod\uff0c\u6216\u8005\u5728\u8001mod\u4e2d\u6dfb\u52a0\u5982\u4e0b\u4ee3\u7801\uff1a modmain.lua 1 2 3 4 5 6 7 8 9 AddClassPostConstruct ( \"screens/playerhud\" , function ( self ) local old_OnRawKey = self . OnRawKey function self : OnRawKey ( key , down , ...) if old_OnRawKey ( self , key , down , ...) then return true end if key == KEY_A and down then print ( \"\u5728\u8fd9\u91cc\u4fee\u6539\u73a9\u5bb6\u8840\u91cf\" ) end end end ) \u6ce8\u610f\u7b2c4\u884c\uff0c\u5982\u679c\u51fd\u6570\u6267\u884c\u7684\u8fd4\u56de\u503c\u4e3a\u771f\uff0c\u5c31\u76f4\u63a5\u8fd4\u56de true \uff0c\u8df3\u8fc7\u4e0b\u9762\u201c\u4fee\u6539\u8840\u91cf\u201d\u7684\u4ee3\u7801\u3002 \u5f00\u542fmod\uff0c\u8fdb\u5165\u6e38\u620f\u540e\uff0c\u6309A\u952e\uff0c\u770b\u770b\u6709\u6ca1\u6709\u6253\u5370\u51fa\u4ec0\u4e48\u4e1c\u897f\uff1f Warning mod\u7c7b\u578b\u662f\u670d\u52a1\u5668mod\u3002 \u5982\u679c\u52a0\u8f7dmod\u540e\u5d29\u4e86\uff0c\u8bf7\u5728modmain\u7684\u7b2c\u4e00\u884c\u6dfb\u52a0\uff1a GLOBAL . setmetatable ( env ,{ __index = function ( t , k ) return GLOBAL . rawget ( GLOBAL , k ) end }) \u6392\u9664\u8fde\u51fb \u00b6 \u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u957f\u6309A\u952e\u4f1a\u89e6\u53d1\u591a\u6b21\u6253\u5370\uff0c\u8fd9\u548c\u5e73\u65f6\u7535\u8111\u952e\u76d8\u7684\u8f93\u5165\u903b\u8f91\u662f\u4e00\u81f4\u7684\uff1a \u6572\u4e00\u4e0bA\u952e\uff0c\u8f93\u5165\u4e00\u4e2aA \u6309\u4f4fA\u952e\u4e0d\u677e\uff0c\u5feb\u901f\u8f93\u5165\u4e00\u5927\u5806\u7684A \u4e3a\u4e86\u6392\u9664\u8fde\u51fb\uff0c\u53ef\u4ee5\u7528\u4e00\u4e2a\u53d8\u91cf\u8bb0\u5f55\u6309\u952e\u7684\u72b6\u6001\uff1a modmain.lua 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 AddClassPostConstruct ( \"screens/playerhud\" , function ( self ) local isdown = false local old_OnRawKey = self . OnRawKey function self : OnRawKey ( key , down , ...) if old_OnRawKey ( self , key , down , ...) then return true end if key == KEY_A then if isdown ~= down then isdown = down if isdown then print ( \"\u5728\u8fd9\u91cc\u4fee\u6539\u73a9\u5bb6\u8840\u91cf\uff08\u957f\u6309\u4e0d\u4f1a\u8fde\u51fb\uff09\" ) end end end end end ) \u5224\u5b9a\u4fee\u9970\u952e \u00b6 \u5982\u679c\u9700\u8981\u76d1\u542c\u7684\u952e\u4f4d\u662fctrl+A\uff08\u53ea\u6309A\u4e0d\u89e6\u53d1\uff09\uff0c\u90a3\u4e48\u52a0\u4e00\u53e5\u5224\u5b9a\u5373\u53ef\u3002 modmain.lua 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 AddClassPostConstruct ( \"screens/playerhud\" , function ( self ) local isdown = false local old_OnRawKey = self . OnRawKey function self : OnRawKey ( key , down , ...) if old_OnRawKey ( self , key , down , ...) then return true end if key == KEY_A then if isdown ~= down then isdown = down if isdown and TheInput : IsKeyDown ( KEY_CTRL ) then print ( \"\u5728\u8fd9\u91cc\u4fee\u6539\u73a9\u5bb6\u8840\u91cf\uff08\u6309\u4e86ctrl\uff09\" ) end end end end end ) \u66f4\u591a\u7684\u5224\u5b9a \u00b6 \u4e0a\u9762\u7684\u4ee3\u7801\u6709\u5f88\u5f3a\u7684\u6269\u5c55\u6027\uff0c\u901a\u8fc7\u4e00\u4e9b\u4fee\u6539\u5c31\u53ef\u4ee5\u5b9e\u73b0\u66f4\u591a\u66f4\u590d\u6742\u7684\u5224\u5b9a\uff0c\u601d\u8003\u4e00\u4e0b\u5982\u4f55\u5b9e\u73b0\u4e0b\u9762\u7684\u529f\u80fd\uff1a \u6309\u4e0bA\u65f6\u6263\u8840\uff0c\u677e\u5f00A\u65f6\u52a0\u8840\u3002 \u6309\u4e0bA\u6216\u8005B\u65f6\u90fd\u89e6\u53d1\u6263\u8840\u3002 \u6309\u4e0bA\u65f6\u6263\u8840\uff0c\u6309\u4e0bB\u65f6\u52a0\u8840\u3002 \u6309\u4e0b\u67d0\u4e2a\u6309\u952e\u65f6\u6263\u8840\uff0c\u8fd9\u4e2a\u6309\u952e\u53ef\u4ee5\u5728mod\u914d\u7f6e\u754c\u9762\u4fee\u6539\u3002 \u5feb\u901f\u8fde\u6309\u4e24\u4e0bA\u624d\u6263\u8840\u3002\uff08\u63d0\u793a\uff1a GetTime() \u51fd\u6570\u53ef\u4ee5\u83b7\u53d6\u5f53\u524d\u6e38\u620f\u8fd0\u884c\u65f6\u95f4\uff09 \u5982\u4f55\u6263\u8840\uff1f \u00b6 \u8fd9\u5e76\u4e0d\u662f\u672c\u7ae0\u4f1a\u8be6\u7ec6\u4ecb\u7ecd\u7684\u5185\u5bb9\uff0c\u4ee5\u4e0b\u53ea\u7b80\u5355\u63d0\u4e00\u4e0b\u601d\u8def\uff1a \u6309\u4e0b\u6309\u952e\u65f6\u53d1\u9001 mod rpc\u3002 \u6263\u8840\u4f7f\u7528 health:DoDelta() \u51fd\u6570\u3002 \u5b8c\u6574\u793a\u4f8b \u00b6 modmain.lua 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 GLOBAL . setmetatable ( env ,{ __index = function ( t , k ) return GLOBAL . rawget ( GLOBAL , k ) end }) -- \u952e\u76d8\u76d1\u542c \u5b8c\u6574\u793a\u4f8b AddClassPostConstruct ( \"screens/playerhud\" , function ( self ) local isdown = false local old_OnRawKey = self . OnRawKey function self : OnRawKey ( key , down , ...) if old_OnRawKey ( self , key , down , ...) then return true end if key == KEY_A then if isdown ~= down then isdown = down if isdown then SendModRPCToServer ( MOD_RPC [ \"testmod\" ][ \"health\" ]) end end end end end ) AddModRPCHandler ( \"testmod\" , \"health\" , function ( inst ) inst . components . health : DoDelta ( - 10 ) end ) \u6ce8\u610f\uff0c\u6309\u4e0bA\u7684\u540c\u65f6\uff0c\u89d2\u8272\u4e5f\u4f1a\u5411\u5de6\u79fb\u52a8\u3002\u4f5c\u4e3a\u73a9\u5bb6\uff0c\u5f53\u6309\u4e0bA\u65f6\uff0c\u7a76\u7adf\u60f3\u8981\u5411\u5de6\u8d70\u8fd8\u662f\u89e6\u53d1\u6309\u952e\uff0c\u662f\u6709\u6b67\u4e49\u7684\u3002\u56e0\u6b64\uff0c\u5728\u76d1\u542c\u6309\u952e\u65f6\uff0c\u6700\u597d\u4e0d\u8981\u4f7f\u7528\u4f1a\u548c\u539f\u7248\u64cd\u4f5c\u51b2\u7a81\u7684\u6309\u952e\uff0c\u5982WASD\u3002 \u53e6\u5916\uff0c\u4f60\u53ef\u80fd\u60f3\u5b9e\u73b0\u6bd4\u6263\u8840\u66f4\u70ab\u9177\u7684\u529f\u80fd\uff0c\u6bd4\u5982\u91ca\u653e\u67d0\u4e2a\u6280\u80fd\uff0c\u8fd9\u4e9b\u53ea\u9700\u8981\u4fee\u6539RPC\u7684\u89e6\u53d1\u51fd\u6570\u5373\u53ef\uff0c\u6309\u952e\u76d1\u542c\u7684\u601d\u8def\u662f\u76f8\u901a\u7684\u3002 \u603b\u7ed3 \u00b6 \u6309\u952e\u76d1\u542c\u662f\u4e00\u4ef6\u975e\u5e38\u5bb9\u6613\u7684\u4e8b\u60c5\uff0c\u53ef\u4ee5\u770b\u5230\u6700\u7ec8\u7684\u4ee3\u7801\u5f88\u7b80\u6d01\uff0c\u53ea\u670920\u884c\uff0c\u5e0c\u671b\u4f60\u80fd\u5b8c\u5168\u7406\u89e3\u8fd9\u4e9b\u4ee3\u7801\u80cc\u540e\u7684\u601d\u8def\uff0c\u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u4fee\u6539\u8fd9\u4e9b\u4ee3\u7801\uff0c\u800c\u4e0d\u662f\u53ea\u4f1acopy/paste\u3002 \u5982\u679c\u8981\u5b9e\u73b0\u975e\u5e38\u9ad8\u7ea7\u7684\u529f\u80fd\uff0c\u4f60\u53ef\u4ee5\u518d\u56de\u53bb\u7814\u7a76\u4e00\u4e0b\u901a\u7528\u7684\u76d1\u542c\u5668\uff0c\u6bd4\u5982 TheInput:AddKeyHandler(fn)\u3002 \u6269\u5c55 \u00b6 \u4ee5\u4e0b\u5185\u5bb9\u9002\u5408\u6709\u94bb\u7814\u7cbe\u795e\u7684\u5f00\u53d1\u8005\u3002 OnRawKey() \u51fd\u6570\u7684\u7ec6\u8282 \u00b6 \u6211\u4eec\u91cd\u65b0\u770b\u4e00\u4e0b PlayerHud:OnRawKey() \u51fd\u6570\u7684\u5b9a\u4e49\uff1a screens/playerhud.lua, 1083 1 2 3 4 5 6 7 8 9 10 function PlayerHud : OnRawKey ( key , down ) if PlayerHud . _base . OnRawKey ( self , key , down ) then return true elseif down and self . shown and key == KEY_SEMICOLON and TheInput : IsKeyDown ( KEY_SHIFT ) then local chat_input_screen = ChatInputScreen ( false ) chat_input_screen . chat_edit : SetString ( \":\" ) TheFrontEnd : PushScreen ( chat_input_screen ) return true end end \u6ce8\u610f\uff0c\u5728\u7b2c\u4e8c\u884c\uff0c\u8be5\u51fd\u6570\u8c03\u7528\u4e86\u5176\u57fa\u7c7b\uff08._base\uff09\u7684 OnRawKey() \u51fd\u6570\u3002\u4e00\u4e2a\u7c7b\u7684\u57fa\u7c7b\u5e94\u8be5\u67e5\u770b\u5176\u6784\u9020\u51fd\u6570\u3002\u5f80\u4e0a\u7ffb\u6e90\u4ee3\u7801\uff0c\u5728\u7b2c45\u884c\u53ef\u4ee5\u770b\u89c1\uff1a screens/playerhud.lua, 45 1 2 3 4 5 local PlayerHud = Class ( Screen , function ( self ) Screen . _ctor ( self , \"HUD\" ) self . overlayroot = self : AddChild ( Widget ( \"overlays\" )) -- \u5176\u4ed6\u5185\u5bb9... \u8868\u660e PlayerHud \u7684\u57fa\u7c7b\u662f Screen\u3002 \u63a5\u7740\u53bb\u770b\u770b Screen \u7c7b\u7684\u5b9a\u4e49\u4f4d\u7f6e widgets/screen.lua\uff0c\u4f1a\u53d1\u73b0\u91cc\u9762\u5e76\u6ca1\u6709\u51fd\u6570 OnRawKey()\u3002\u6240\u4ee5\u6211\u4eec\u63a5\u7740\u627e Screen \u7c7b\u7684\u57fa\u7c7b Widget\uff0c\u601d\u8def\u548c\u4e0a\u9762\u4e00\u6837\u3002 widgets/screen.lua, 4 1 2 3 4 5 6 7 8 local Screen = Class ( Widget , function ( self , name ) Widget . _ctor ( self , name ) --self.focusstack = {} --self.focusindex = 0 self . handlers = {} --self.inst:Hide() self . is_screen = true end ) widgets/widget.lua, 105 1 2 3 4 5 6 function Widget : OnRawKey ( key , down ) if not self . focus then return false end for k , v in pairs ( self . children ) do if v . focus and v : OnRawKey ( key , down ) then return true end end end \u81f3\u6b64\uff0cOnRawKey() \u51fd\u6570\u7684\u8fd0\u884c\u7ec6\u8282\u624d\u88ab\u63ed\u5f00\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5f53\u73a9\u5bb6\u6309\u4e0b\u6216\u8005\u677e\u5f00\u952e\u76d8\u65f6\uff0c\u754c\u9762\u4f1a\u904d\u5386\u81ea\u5df1\u7684\u5b50ui\uff0c\u5f53\u9047\u5230\u4efb\u4f55\u4e00\u4e2a\u6210\u529f\u6267\u884c\u7684 OnRawKey() \u51fd\u6570\u65f6\uff0c\u5c31\u7acb\u523b\u8fd4\u56de true \uff0c\u5e76\u8df3\u8fc7\u5176\u4ed6\u7684ui\u3002\u6ce8\u610f\u8fd9\u91cc\u6709\u7c7b\u4f3c\u9012\u5f52\u7684\u73b0\u8c61\u3002 \u4f60\u53ef\u80fd\u5df2\u7ecf\u731c\u5230\u4e3a\u4ec0\u4e48 OnRawKey() \u53ef\u4ee5\u6392\u9664\u6587\u672c\u8f93\u5165\u6846\u4e86\uff0c\u6211\u628a\u4ee3\u7801\u8d34\u5728\u4e0b\u9762\uff0c\u5c1d\u8bd5\u5206\u6790\u4e00\u4e0b\u5427\u3002\uff08\u6587\u672c\u8f93\u5165ui\u88ab\u5b9a\u4e49\u5728 widgets/textedit\uff09 widgets/textedit.lua, 266 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 function TextEdit : OnRawKey ( key , down ) if self . editing and self . prediction_widget ~= nil and self . prediction_widget : OnRawKey ( key , down ) then self . editing_enter_down = false return true end if TextEdit . _base . OnRawKey ( self , key , down ) then self . editing_enter_down = false return true end if self . editing then if down then if TheInput : IsPasteKey ( key ) then self . pasting = true local clipboard = TheSim : GetClipboardData () for i = 1 , # clipboard do local success , overflow = self : OnTextInput ( clipboard : sub ( i , i )) if overflow then break end end self . pasting = false elseif self . allow_newline and key == KEY_ENTER and down then self : OnTextInput ( \" \\n \" ) else self . inst . TextEditWidget : OnKeyDown ( key ) end self . editing_enter_down = key == KEY_ENTER elseif key == KEY_ENTER and not self . focus then -- this is a fail safe incase the mouse changes the focus widget while editing the text field. We could look into FrontEnd:LockFocus but some screens require focus to be soft (eg: lobbyscreen's chat) if self . editing_enter_down then self . editing_enter_down = false if not self . allow_newline then self : OnProcess () end end return true elseif key == KEY_TAB and self . nextTextEditWidget ~= nil then self . editing_enter_down = false local nextWidg = self . nextTextEditWidget if type ( nextWidg ) == \"function\" then nextWidg = nextWidg () end if nextWidg ~= nil and type ( nextWidg ) == \"table\" and nextWidg . inst . TextEditWidget ~= nil then self : SetEditing ( false ) nextWidg : SetEditing ( true ) end -- self.nextTextEditWidget:OnControl(CONTROL_ACCEPT, false) else self . editing_enter_down = false self . inst . TextEditWidget : OnKeyUp ( key ) end if self . OnTextInputted ~= nil then self . OnTextInputted () end end --gobble up unregistered valid raw keys, or we will engage debug keys! return not self . validrawkeys [ key ] end","title":"\u6309\u952e"},{"location":"theme/key/#_1","text":"\u70b9\u51fb\u9f20\u6807\u3001\u6309\u4e0b\u6309\u952e\u3001\u79fb\u52a8\u624b\u67c4\u7b49\u64cd\u4f5c\uff0c\u5728\u6e38\u620f\u91cc\u88ab\u89c6\u4f5c\u4e00\u79cd\u8f93\u5165\uff0c\u5b83\u4eec\u90fd\u4f1a\u7528\u4e00\u4e2a\u6574\u6570\u8868\u793a\uff0c\u53c2\u8003 constants.lua constants.lua -- 81\u884c CONTROL_PRIMARY = 0 -- \u4e3b\u52a8\u4f5c\uff0c\u9ed8\u8ba4\u7ed1\u5b9a\u5728\u9f20\u6807\u5de6\u952e CONTROL_SECONDARY = 1 -- \u526f\u52a8\u4f5c\uff0c\u9ed8\u8ba4\u7ed1\u5b9a\u5728\u9f20\u6807\u53f3\u952e CONTROL_ATTACK = 2 -- \u653b\u51fb\uff0c\u9ed8\u8ba4\u7ed1\u5b9a\u5728F -- ... -- 246\u884c KEY_A = 97 -- \u6309\u4e0b\u6216\u677e\u5f00A KEY_B = 98 -- \u6309\u4e0b\u6216\u677e\u5f00B KEY_C = 99 KEY_D = 100 KEY_E = 101 KEY_F = 102 KEY_G = 103 KEY_H = 104 \u6ce8\u610f CONTROL_ \u5f00\u5934\u7684\u53d8\u91cf\u548c KEY_ \u5f00\u5934\u7684\u53d8\u91cf\u6709\u4e00\u4e9b\u5fae\u5999\u7684\u533a\u522b\u3002 KEY_F \u53ea\u4f1a\u5728\u6309\u4e0b\u548c\u677e\u5f00F\u952e\u7684\u65f6\u5019\u89e6\u53d1\u3002 CONTROL_ATTACK \u4f1a\u5728\u6309\u4e0b\u548c\u677e\u5f00 \u653b\u51fb\u952e \u7684\u65f6\u5019\u89e6\u53d1\uff0c\u9ed8\u8ba4F\uff0c\u4f46\u5982\u679c\u73a9\u5bb6\u5728\u8bbe\u7f6e\u9762\u677f\u4e2d\u628a\u653b\u51fb\u952e\u6539\u6210\u4e86J\uff0c\u90a3\u4e48\u6309\u4e0bJ\u624d\u4f1a\u89e6\u53d1 CONTROL_ATTACK \u3002 \u5728\u672c\u7ae0\u8282\uff0c\u6211\u4eec\u53ea\u5173\u6ce8 KEY_ \u5f00\u5934\u7684\u53d8\u91cf\u3002","title":"\u6309\u952e\u7684\u5b9a\u4e49"},{"location":"theme/key/#_2","text":"\u5728 input.lua \u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e9b\u51fd\u6570\uff0c\u53ef\u4ee5\u7528\u6765\u76d1\u542c\u6309\u952e\u7684\u6309\u4e0b\u548c\u677e\u5f00\u3002","title":"\u76d1\u542c\u5668"},{"location":"theme/key/#theinputaddkeyhandlerfn-handertable","text":"\u6dfb\u52a0\u4e00\u4e2a\u901a\u7528\u6309\u952e\u76d1\u542c\u5668\uff0c\u5f53\u4efb\u610f\u6309\u952e\u88ab\u6309\u4e0b\u6216\u677e\u5f00\u65f6\uff0cfn\u5c31\u4f1a\u88ab\u8c03\u7528\uff0c\u4f20\u5165\u4e24\u4e2a\u53c2\u6570\uff1akey:int\uff08\u6309\u952e\u503c\uff09\uff0cdown:boolean\uff08\u662f\u5426\u88ab\u6309\u4e0b\uff09\u3002 \u8be5\u51fd\u6570\u4f1a\u8fd4\u56de\u4e00\u4e2a\u76d1\u542c\u5668\u5bf9\u8c61\u3002 \u8bd5\u4e00\u8bd5 \u542f\u52a8\u9965\u8352\uff0c\u8fdb\u5165\u6e38\u620f\u4e3b\u754c\u9762\uff08\u4e0d\u9700\u8981\u8fdb\u4e16\u754c\uff09\uff0c\u5728\u63a7\u5236\u53f0\u8fd0\u884c\u5982\u4e0b\u4ee3\u7801\uff1a TheInput : AddKeyHandler ( print ) \u6309ctrl+L\u6253\u5f00\u8f93\u51fa\u9762\u677f\uff0c\u7136\u540e\u968f\u610f\u7684\u6572\u51fb\u952e\u76d8\u6309\u952e\uff0c\u4ed4\u7ec6\u89c2\u5bdf\u8f93\u51fa\u9762\u677f\u6253\u5370\u7684\u5185\u5bb9\u3002 \u957f\u6309 \u67d0\u4e2a\u6309\u952e\uff08\u6bd4\u5982F\uff09\uff0c\u770b\u770b\u8f93\u51fa\u9762\u677f\u4f1a\u6253\u5370\u4ec0\u4e48\uff1f \u518d\u6b21\u8fd0\u884c\u4e00\u904d\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u770b\u770b\u53d1\u751f\u4e86\u4ec0\u4e48\u53d8\u5316\uff1f","title":"TheInput:AddKeyHandler(fn) -&gt; hander:table"},{"location":"theme/key/#theinputaddkeydownhandlerkeyint-fn-handlertable","text":"\u6dfb\u52a0\u4e00\u4e2a\u7279\u5b9a\u6309\u952e\u7684\u76d1\u542c\u5668\uff0c\u5f53key\u88ab\u6309\u4e0b\u7684\u65f6\u5019\uff0cfn\u5c31\u4f1a\u88ab\u8c03\u7528\uff0c\u65e0\u53c2\u6570\u3002 \u8be5\u51fd\u6570\u4e5f\u4f1a\u8fd4\u56de\u4e00\u4e2a\u76d1\u542c\u5668\u5bf9\u8c61\u3002 \u8bd5\u4e00\u8bd5 \u8fd9\u91cc\u7b80\u5355\u76d1\u542c\u4e00\u4e0bA\u6309\u952e\u3002 \u542f\u52a8\u9965\u8352\uff0c\u5982\u679c\u5df2\u7ecf\u542f\u52a8\u8fc7\u4e86\uff0c\u5728\u63a7\u5236\u53f0\u8fd0\u884c\u5982\u4e0b\u4ee3\u7801\uff1a c_reset () \u7b49\u5f85\u6e38\u620f\u91cd\u542f\u540e\uff0c\u8fd0\u884c\u5982\u4e0b\u4ee3\u7801\uff1a TheInput : AddKeyDownHandler ( KEY_A , function () print ( \"A \u88ab\u6309\u4e0b\u4e86\" , GetTick ()) end ) \u6309\u4e0b\u6216\u8005\u677e\u5f00A\uff0c\u770b\u770b\u8f93\u51fa\u9762\u677f\u6253\u5370\u4e86\u4ec0\u4e48\uff1f \u518d\u6b21\u8fd0\u884c\u4e00\u904d\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u770b\u770b\u53d1\u751f\u4e86\u4ec0\u4e48\u53d8\u5316\uff0c\u548c\u4f60\u7684\u9884\u671f\u4e00\u81f4\u5417\uff1f Warning GetTick() \u51fd\u6570\u8fd4\u56de\u5f53\u524d\u7684\u5e27\u65f6\u95f4\uff0c\u6267\u884c\u8fd9\u4e2a\u51fd\u6570\u662f\u4e3a\u4e86\u533a\u5206\u6bcf\u4e00\u6b21\u7684\u6253\u5370\uff0c\u5e76\u6ca1\u6709\u5176\u4ed6\u6548\u679c\u3002","title":"TheInput:AddKeyDownHandler(key:int, fn) -&gt; handler:table"},{"location":"theme/key/#theinputaddkeyuphandlerkeyint-fn-handlertable","text":"\u6dfb\u52a0\u4e00\u4e2a\u7279\u5b9a\u6309\u952e\u7684\u76d1\u542c\u5668\uff0c\u5f53key\u88ab \u677e\u5f00 \u7684\u65f6\u5019\uff0cfn\u5c31\u4f1a\u88ab\u8c03\u7528\uff0c\u65e0\u53c2\u6570\u3002 \u8be5\u51fd\u6570\u8fd8\u662f\u4f1a\u8fd4\u56de\u4e00\u4e2a\u76d1\u542c\u5668\u5bf9\u8c61\u3002 \u8fd9\u4e2a\u51fd\u6570\u548c TheInput:AddKeyDownHandler \u975e\u5e38\u7c7b\u4f3c\uff0c\u53ea\u4e0d\u8fc7\u5728\u6309\u952e\u677e\u5f00\u65f6\u624d\u89e6\u53d1\u3002 \u8bd5\u4e00\u8bd5 \u542f\u52a8\u9965\u8352\uff0c\u5982\u679c\u5df2\u7ecf\u542f\u52a8\u8fc7\u4e86\uff0c\u5728\u63a7\u5236\u53f0\u8fd0\u884c\u5982\u4e0b\u4ee3\u7801\uff1a c_reset () \u7b49\u5f85\u6e38\u620f\u91cd\u542f\u540e\uff0c\u8fd0\u884c\u5982\u4e0b\u4ee3\u7801\uff1a TheInput : AddKeyUpHandler ( KEY_A , function () print ( \"A \u88ab\u677e\u5f00\u4e86\" , GetTick ()) end ) \u6309\u4e0b\u6216\u8005\u677e\u5f00A\uff0c\u770b\u770b\u8f93\u51fa\u9762\u677f\u6253\u5370\u4e86\u4ec0\u4e48\uff1f \u518d\u6b21\u8fd0\u884c\u4e00\u904d\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u770b\u770b\u53d1\u751f\u4e86\u4ec0\u4e48\u53d8\u5316\uff0c\u548c\u4f60\u7684\u9884\u671f\u4e00\u81f4\u5417\uff1f","title":"TheInput:AddKeyUpHandler(key:int, fn) -&gt; handler:table"},{"location":"theme/key/#_3","text":"\u6309\u952e\u76d1\u542c\u5668\u662f\u4e00\u4e2a\u6bd4\u8f83\u5e95\u5c42\u7684\u4e1c\u897f\uff0c\u5728\u5165\u95e8\u7ea7\u7684mod\u5f00\u53d1\u4e2d\u5e76\u4e0d\u4f1a\u4f7f\u7528\u5b83\uff0c\u56e0\u4e3a\uff0c\u5f53\u76d1\u542c\u5668\u8bc6\u522b\u5230A\u952e\u88ab\u6309\u4e0b\u65f6\uff1a \u6e38\u620f\u53ef\u80fd\u5728\u4e3b\u754c\u9762\u6216\u8005\u662f\u5176\u4ed6\u914d\u7f6e\u754c\u9762\uff08\u73a9\u5bb6\u8fd8\u672a\u521b\u5efa\uff09 \u73a9\u5bb6\u53ef\u80fd\u5728\u804a\u5929\u6846\u6253\u5b57\uff0c\u8f93\u5165\u4e86\u4e00\u4e2aA \u73a9\u5bb6\u53ef\u80fd\u5728\u63a7\u5236\u53f0\u6572\u6307\u4ee4\uff0c\u8f93\u5165\u4e86\u4e00\u4e2aA \u73a9\u5bb6\u53ef\u80fd\u6309\u4e0bA\u6765\u5411\u5de6\u79fb\u52a8 \u53ef\u80fd\u8fd8\u6709\u5176\u4ed6\u9a9a\u64cd\u4f5c... \u6309\u952e\u76d1\u542c\u5668\u5e76\u4e0d\u80fd\u5b8c\u7f8e\u7684\u533a\u5206\u8fd9\u4e9b\u4e0d\u540c\u7684\u60c5\u5f62\uff0c\u6240\u4ee5\u5e76\u4e0d\u5e38\u7528\u3002 \u628a\u4e0a\u9762\u8fd9\u4e9b\u6682\u65f6\u5fd8\u6389\u5427\u3002","title":"\u4e0a\u9762\u8fd9\u4e9b\u77e5\u8bc6\u90fd\u4e0d\u91cd\u8981\uff01"},{"location":"theme/key/#_4","text":"\u8fd9\u91cc\u5b9e\u73b0\u4e00\u4e2a\u7b80\u5355\u7684\u529f\u80fd\uff1a \u5f53\u6309\u952eA\u88ab\u6309\u4e0b\u65f6\uff0c\u5f53\u524d\u73a9\u5bb6\u7684\u751f\u547d\u503c\u626310 \u3002","title":"\u6e38\u620f\u5185\u76d1\u542c\u5668"},{"location":"theme/key/#_5","text":"\u4e00\u4e2a\u5408\u683c\u7684\u6e38\u620f\u5185\u6309\u952e\u76d1\u542c\u5668\u5e94\u8be5\u7b26\u5408\u4ee5\u4e0b\u6807\u51c6\uff1a \u5f53\u73a9\u5bb6\u52a0\u5165\u4e16\u754c\u65f6\u624d\u751f\u6548\uff0c\u5f53\u73a9\u5bb6\u79bb\u5f00\u65f6\u81ea\u52a8\u79fb\u9664\u3002 \u53ea\u5728\u8fdb\u5165\u4e16\u754c\u540e\u624d\u751f\u6548\uff0c\u5728\u6e38\u620f\u4e3b\u754c\u9762\u65e0\u6548\u679c\u3002 \u5f53\u73a9\u5bb6\u5728\u6682\u505c\u9875\u9762\u6216\u8bbe\u7f6e\u9875\u9762\u64cd\u4f5c\u65f6\uff0c\u4e0d\u4f1a\u6709\u53cd\u5e94\u3002 \u5f53\u73a9\u5bb6\u5728\u804a\u5929\u6846\u6216\u63a7\u5236\u53f0\u7b49\u8f93\u5165\u6846\u4e2d\u6253\u5b57\u65f6\uff0c\u4e0d\u4f1a\u6709\u53cd\u5e94\u3002 \u4e3a\u4e86\u5b9e\u73b01/2/3\uff0c\u6211\u4eec\u5c06\u6309\u952e\u76d1\u542c\u5668\u7ed1\u5b9a\u5230\u73a9\u5bb6\u754c\u9762: screens/playerhud\u3002 \u4e3a\u4e86\u5b9e\u73b04\uff0c\u901a\u8fc7\u4fee\u6539 OnRawKey() \u51fd\u6570\u6392\u9664\u8f93\u5165\u6846\u3002","title":"\u6807\u51c6"},{"location":"theme/key/#_6","text":"\u73a9\u5bb6\u754c\u9762 \u662f\u663e\u793a\u73a9\u5bb6\u4fe1\u606f\u548c\u4e00\u4e9b\u64cd\u4f5c\u7684\u9762\u677f\uff0c\u5b83\u5305\u542b\u4e86\u53f3\u4e0a\u89d2\u4e09\u56f4\u56fe\u6807\u3001\u65f6\u949f\u56fe\u6807\uff0c\u5de6\u4fa7\u5236\u9020\u680f\uff0c\u4e0b\u65b9\u7269\u54c1\u680f\uff0c\u53f3\u4fa7\u80cc\u5305\u680f\uff0c\u5de6\u4e0b\u804a\u5929\u6846\uff0c\u53f3\u4e0b\u6682\u505c\u952e\u3001\u5730\u56fe\u6309\u94ae\uff0c\u4ee5\u53ca\u8fc7\u70ed\u3001\u8fc7\u51b7\u3001\u70e7\u4f24\u3001\u53d7\u4f24\u7b49\u65f6\u673a\u4e0b\u89e6\u53d1\u7684\u5168\u5c4f\u7279\u6548\u63d0\u793a\u3002 \u73a9\u5bb6\u754c\u9762\u4ec5\u5728\u73a9\u5bb6\u52a0\u5165\u4e16\u754c\u540e\u624d\u4f1a\u88ab\u521b\u5efa\u3002 \u4e3b\u754c\u9762\u4e0a\u6ca1\u6709\u73a9\u5bb6\u754c\u9762\uff0c\u8fdb\u5165\u4e16\u754c\u540e\u624d\u6709\u3002 \u5f53\u6682\u505c\u9875\u9762\u6216\u8005\u8bbe\u7f6e\u9875\u9762\u663e\u793a\u7684\u65f6\u5019\uff0c\u73a9\u5bb6\u754c\u9762\u4f1a\u88ab\u76d6\u4f4f\uff0c\u4e00\u5207\u8f93\u5165\u63a7\u5236\u4f1a\u88ab\u4e0a\u65b9\u7684\u754c\u9762\u963b\u65ad\u3002 \u56e0\u6b64\uff0c\u5b8c\u7f8e\u7b26\u5408\u6807\u51c6\u3002 \u63a5\u7740\uff0c\u770b\u4e00\u4e0b PlayerHud:OnRawKey() \u51fd\u6570\u7684\u5b9a\u4e49\uff1a screens/playerhud.lua 1 2 3 4 5 6 7 8 9 10 function PlayerHud : OnRawKey ( key , down ) if PlayerHud . _base . OnRawKey ( self , key , down ) then return true elseif down and self . shown and key == KEY_SEMICOLON and TheInput : IsKeyDown ( KEY_SHIFT ) then local chat_input_screen = ChatInputScreen ( false ) chat_input_screen . chat_edit : SetString ( \":\" ) TheFrontEnd : PushScreen ( chat_input_screen ) return true end end \u4e0d\u9700\u8981\u6df1\u5165\u4e86\u89e3\u8fd9\u4e2a\u51fd\u6570\u7684\u7ec6\u8282\uff0c\u53ea\u9700\u8981\u6ce8\u610f\u4e00\u70b9\uff1a\u5f53 OnRawKey() \u51fd\u6570\u201c \u5e72\u4e86\u4ec0\u4e48\u4e8b\u60c5 \u201d\u7684\u65f6\u5019\uff0c\u5b83\u4f1a\u8fd4\u56de true \u3002 \u663e\u7136\uff0c\u5728\u8f93\u5165\u6846\u6253\u5b57\u4e5f\u7b97\u201c\u5e72\u4e86\u4ec0\u4e48\u4e8b\u60c5\u201d\uff0c\u6240\u4ee5\u4e3a\u4e86\u6392\u9664\u8fd9\u79cd\u60c5\u51b5\uff0c\u5f53 OnRawKey() \u51fd\u6570\u8fd4\u56de true \u65f6\uff0c \u4e0d\u89e6\u53d1 \u6309\u952e\u76d1\u542c\u5668\uff0c\u5426\u5219\u89e6\u53d1\u3002\u4e86\u89e3\u539f\u7406\u540e\uff0c\u6211\u4eec\u8fdb\u5165\u5b9e\u6218\u90e8\u5206\u3002","title":"\u539f\u7406"},{"location":"theme/key/#_7","text":"","title":"\u5b9e\u6218"},{"location":"theme/key/#_8","text":"\u521b\u5efa\u4e00\u4e2a\u65b0mod\uff0c\u6216\u8005\u5728\u8001mod\u4e2d\u6dfb\u52a0\u5982\u4e0b\u4ee3\u7801\uff1a modmain.lua 1 2 3 4 5 6 7 8 9 AddClassPostConstruct ( \"screens/playerhud\" , function ( self ) local old_OnRawKey = self . OnRawKey function self : OnRawKey ( key , down , ...) if old_OnRawKey ( self , key , down , ...) then return true end if key == KEY_A and down then print ( \"\u5728\u8fd9\u91cc\u4fee\u6539\u73a9\u5bb6\u8840\u91cf\" ) end end end ) \u6ce8\u610f\u7b2c4\u884c\uff0c\u5982\u679c\u51fd\u6570\u6267\u884c\u7684\u8fd4\u56de\u503c\u4e3a\u771f\uff0c\u5c31\u76f4\u63a5\u8fd4\u56de true \uff0c\u8df3\u8fc7\u4e0b\u9762\u201c\u4fee\u6539\u8840\u91cf\u201d\u7684\u4ee3\u7801\u3002 \u5f00\u542fmod\uff0c\u8fdb\u5165\u6e38\u620f\u540e\uff0c\u6309A\u952e\uff0c\u770b\u770b\u6709\u6ca1\u6709\u6253\u5370\u51fa\u4ec0\u4e48\u4e1c\u897f\uff1f Warning mod\u7c7b\u578b\u662f\u670d\u52a1\u5668mod\u3002 \u5982\u679c\u52a0\u8f7dmod\u540e\u5d29\u4e86\uff0c\u8bf7\u5728modmain\u7684\u7b2c\u4e00\u884c\u6dfb\u52a0\uff1a GLOBAL . setmetatable ( env ,{ __index = function ( t , k ) return GLOBAL . rawget ( GLOBAL , k ) end })","title":"\u8bbe\u7f6e\u76d1\u542c\u5668"},{"location":"theme/key/#_9","text":"\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u957f\u6309A\u952e\u4f1a\u89e6\u53d1\u591a\u6b21\u6253\u5370\uff0c\u8fd9\u548c\u5e73\u65f6\u7535\u8111\u952e\u76d8\u7684\u8f93\u5165\u903b\u8f91\u662f\u4e00\u81f4\u7684\uff1a \u6572\u4e00\u4e0bA\u952e\uff0c\u8f93\u5165\u4e00\u4e2aA \u6309\u4f4fA\u952e\u4e0d\u677e\uff0c\u5feb\u901f\u8f93\u5165\u4e00\u5927\u5806\u7684A \u4e3a\u4e86\u6392\u9664\u8fde\u51fb\uff0c\u53ef\u4ee5\u7528\u4e00\u4e2a\u53d8\u91cf\u8bb0\u5f55\u6309\u952e\u7684\u72b6\u6001\uff1a modmain.lua 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 AddClassPostConstruct ( \"screens/playerhud\" , function ( self ) local isdown = false local old_OnRawKey = self . OnRawKey function self : OnRawKey ( key , down , ...) if old_OnRawKey ( self , key , down , ...) then return true end if key == KEY_A then if isdown ~= down then isdown = down if isdown then print ( \"\u5728\u8fd9\u91cc\u4fee\u6539\u73a9\u5bb6\u8840\u91cf\uff08\u957f\u6309\u4e0d\u4f1a\u8fde\u51fb\uff09\" ) end end end end end )","title":"\u6392\u9664\u8fde\u51fb"},{"location":"theme/key/#_10","text":"\u5982\u679c\u9700\u8981\u76d1\u542c\u7684\u952e\u4f4d\u662fctrl+A\uff08\u53ea\u6309A\u4e0d\u89e6\u53d1\uff09\uff0c\u90a3\u4e48\u52a0\u4e00\u53e5\u5224\u5b9a\u5373\u53ef\u3002 modmain.lua 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 AddClassPostConstruct ( \"screens/playerhud\" , function ( self ) local isdown = false local old_OnRawKey = self . OnRawKey function self : OnRawKey ( key , down , ...) if old_OnRawKey ( self , key , down , ...) then return true end if key == KEY_A then if isdown ~= down then isdown = down if isdown and TheInput : IsKeyDown ( KEY_CTRL ) then print ( \"\u5728\u8fd9\u91cc\u4fee\u6539\u73a9\u5bb6\u8840\u91cf\uff08\u6309\u4e86ctrl\uff09\" ) end end end end end )","title":"\u5224\u5b9a\u4fee\u9970\u952e"},{"location":"theme/key/#_11","text":"\u4e0a\u9762\u7684\u4ee3\u7801\u6709\u5f88\u5f3a\u7684\u6269\u5c55\u6027\uff0c\u901a\u8fc7\u4e00\u4e9b\u4fee\u6539\u5c31\u53ef\u4ee5\u5b9e\u73b0\u66f4\u591a\u66f4\u590d\u6742\u7684\u5224\u5b9a\uff0c\u601d\u8003\u4e00\u4e0b\u5982\u4f55\u5b9e\u73b0\u4e0b\u9762\u7684\u529f\u80fd\uff1a \u6309\u4e0bA\u65f6\u6263\u8840\uff0c\u677e\u5f00A\u65f6\u52a0\u8840\u3002 \u6309\u4e0bA\u6216\u8005B\u65f6\u90fd\u89e6\u53d1\u6263\u8840\u3002 \u6309\u4e0bA\u65f6\u6263\u8840\uff0c\u6309\u4e0bB\u65f6\u52a0\u8840\u3002 \u6309\u4e0b\u67d0\u4e2a\u6309\u952e\u65f6\u6263\u8840\uff0c\u8fd9\u4e2a\u6309\u952e\u53ef\u4ee5\u5728mod\u914d\u7f6e\u754c\u9762\u4fee\u6539\u3002 \u5feb\u901f\u8fde\u6309\u4e24\u4e0bA\u624d\u6263\u8840\u3002\uff08\u63d0\u793a\uff1a GetTime() \u51fd\u6570\u53ef\u4ee5\u83b7\u53d6\u5f53\u524d\u6e38\u620f\u8fd0\u884c\u65f6\u95f4\uff09","title":"\u66f4\u591a\u7684\u5224\u5b9a"},{"location":"theme/key/#_12","text":"\u8fd9\u5e76\u4e0d\u662f\u672c\u7ae0\u4f1a\u8be6\u7ec6\u4ecb\u7ecd\u7684\u5185\u5bb9\uff0c\u4ee5\u4e0b\u53ea\u7b80\u5355\u63d0\u4e00\u4e0b\u601d\u8def\uff1a \u6309\u4e0b\u6309\u952e\u65f6\u53d1\u9001 mod rpc\u3002 \u6263\u8840\u4f7f\u7528 health:DoDelta() \u51fd\u6570\u3002","title":"\u5982\u4f55\u6263\u8840\uff1f"},{"location":"theme/key/#_13","text":"modmain.lua 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 GLOBAL . setmetatable ( env ,{ __index = function ( t , k ) return GLOBAL . rawget ( GLOBAL , k ) end }) -- \u952e\u76d8\u76d1\u542c \u5b8c\u6574\u793a\u4f8b AddClassPostConstruct ( \"screens/playerhud\" , function ( self ) local isdown = false local old_OnRawKey = self . OnRawKey function self : OnRawKey ( key , down , ...) if old_OnRawKey ( self , key , down , ...) then return true end if key == KEY_A then if isdown ~= down then isdown = down if isdown then SendModRPCToServer ( MOD_RPC [ \"testmod\" ][ \"health\" ]) end end end end end ) AddModRPCHandler ( \"testmod\" , \"health\" , function ( inst ) inst . components . health : DoDelta ( - 10 ) end ) \u6ce8\u610f\uff0c\u6309\u4e0bA\u7684\u540c\u65f6\uff0c\u89d2\u8272\u4e5f\u4f1a\u5411\u5de6\u79fb\u52a8\u3002\u4f5c\u4e3a\u73a9\u5bb6\uff0c\u5f53\u6309\u4e0bA\u65f6\uff0c\u7a76\u7adf\u60f3\u8981\u5411\u5de6\u8d70\u8fd8\u662f\u89e6\u53d1\u6309\u952e\uff0c\u662f\u6709\u6b67\u4e49\u7684\u3002\u56e0\u6b64\uff0c\u5728\u76d1\u542c\u6309\u952e\u65f6\uff0c\u6700\u597d\u4e0d\u8981\u4f7f\u7528\u4f1a\u548c\u539f\u7248\u64cd\u4f5c\u51b2\u7a81\u7684\u6309\u952e\uff0c\u5982WASD\u3002 \u53e6\u5916\uff0c\u4f60\u53ef\u80fd\u60f3\u5b9e\u73b0\u6bd4\u6263\u8840\u66f4\u70ab\u9177\u7684\u529f\u80fd\uff0c\u6bd4\u5982\u91ca\u653e\u67d0\u4e2a\u6280\u80fd\uff0c\u8fd9\u4e9b\u53ea\u9700\u8981\u4fee\u6539RPC\u7684\u89e6\u53d1\u51fd\u6570\u5373\u53ef\uff0c\u6309\u952e\u76d1\u542c\u7684\u601d\u8def\u662f\u76f8\u901a\u7684\u3002","title":"\u5b8c\u6574\u793a\u4f8b"},{"location":"theme/key/#_14","text":"\u6309\u952e\u76d1\u542c\u662f\u4e00\u4ef6\u975e\u5e38\u5bb9\u6613\u7684\u4e8b\u60c5\uff0c\u53ef\u4ee5\u770b\u5230\u6700\u7ec8\u7684\u4ee3\u7801\u5f88\u7b80\u6d01\uff0c\u53ea\u670920\u884c\uff0c\u5e0c\u671b\u4f60\u80fd\u5b8c\u5168\u7406\u89e3\u8fd9\u4e9b\u4ee3\u7801\u80cc\u540e\u7684\u601d\u8def\uff0c\u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u4fee\u6539\u8fd9\u4e9b\u4ee3\u7801\uff0c\u800c\u4e0d\u662f\u53ea\u4f1acopy/paste\u3002 \u5982\u679c\u8981\u5b9e\u73b0\u975e\u5e38\u9ad8\u7ea7\u7684\u529f\u80fd\uff0c\u4f60\u53ef\u4ee5\u518d\u56de\u53bb\u7814\u7a76\u4e00\u4e0b\u901a\u7528\u7684\u76d1\u542c\u5668\uff0c\u6bd4\u5982 TheInput:AddKeyHandler(fn)\u3002","title":"\u603b\u7ed3"},{"location":"theme/key/#_15","text":"\u4ee5\u4e0b\u5185\u5bb9\u9002\u5408\u6709\u94bb\u7814\u7cbe\u795e\u7684\u5f00\u53d1\u8005\u3002","title":"\u6269\u5c55"},{"location":"theme/key/#onrawkey","text":"\u6211\u4eec\u91cd\u65b0\u770b\u4e00\u4e0b PlayerHud:OnRawKey() \u51fd\u6570\u7684\u5b9a\u4e49\uff1a screens/playerhud.lua, 1083 1 2 3 4 5 6 7 8 9 10 function PlayerHud : OnRawKey ( key , down ) if PlayerHud . _base . OnRawKey ( self , key , down ) then return true elseif down and self . shown and key == KEY_SEMICOLON and TheInput : IsKeyDown ( KEY_SHIFT ) then local chat_input_screen = ChatInputScreen ( false ) chat_input_screen . chat_edit : SetString ( \":\" ) TheFrontEnd : PushScreen ( chat_input_screen ) return true end end \u6ce8\u610f\uff0c\u5728\u7b2c\u4e8c\u884c\uff0c\u8be5\u51fd\u6570\u8c03\u7528\u4e86\u5176\u57fa\u7c7b\uff08._base\uff09\u7684 OnRawKey() \u51fd\u6570\u3002\u4e00\u4e2a\u7c7b\u7684\u57fa\u7c7b\u5e94\u8be5\u67e5\u770b\u5176\u6784\u9020\u51fd\u6570\u3002\u5f80\u4e0a\u7ffb\u6e90\u4ee3\u7801\uff0c\u5728\u7b2c45\u884c\u53ef\u4ee5\u770b\u89c1\uff1a screens/playerhud.lua, 45 1 2 3 4 5 local PlayerHud = Class ( Screen , function ( self ) Screen . _ctor ( self , \"HUD\" ) self . overlayroot = self : AddChild ( Widget ( \"overlays\" )) -- \u5176\u4ed6\u5185\u5bb9... \u8868\u660e PlayerHud \u7684\u57fa\u7c7b\u662f Screen\u3002 \u63a5\u7740\u53bb\u770b\u770b Screen \u7c7b\u7684\u5b9a\u4e49\u4f4d\u7f6e widgets/screen.lua\uff0c\u4f1a\u53d1\u73b0\u91cc\u9762\u5e76\u6ca1\u6709\u51fd\u6570 OnRawKey()\u3002\u6240\u4ee5\u6211\u4eec\u63a5\u7740\u627e Screen \u7c7b\u7684\u57fa\u7c7b Widget\uff0c\u601d\u8def\u548c\u4e0a\u9762\u4e00\u6837\u3002 widgets/screen.lua, 4 1 2 3 4 5 6 7 8 local Screen = Class ( Widget , function ( self , name ) Widget . _ctor ( self , name ) --self.focusstack = {} --self.focusindex = 0 self . handlers = {} --self.inst:Hide() self . is_screen = true end ) widgets/widget.lua, 105 1 2 3 4 5 6 function Widget : OnRawKey ( key , down ) if not self . focus then return false end for k , v in pairs ( self . children ) do if v . focus and v : OnRawKey ( key , down ) then return true end end end \u81f3\u6b64\uff0cOnRawKey() \u51fd\u6570\u7684\u8fd0\u884c\u7ec6\u8282\u624d\u88ab\u63ed\u5f00\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5f53\u73a9\u5bb6\u6309\u4e0b\u6216\u8005\u677e\u5f00\u952e\u76d8\u65f6\uff0c\u754c\u9762\u4f1a\u904d\u5386\u81ea\u5df1\u7684\u5b50ui\uff0c\u5f53\u9047\u5230\u4efb\u4f55\u4e00\u4e2a\u6210\u529f\u6267\u884c\u7684 OnRawKey() \u51fd\u6570\u65f6\uff0c\u5c31\u7acb\u523b\u8fd4\u56de true \uff0c\u5e76\u8df3\u8fc7\u5176\u4ed6\u7684ui\u3002\u6ce8\u610f\u8fd9\u91cc\u6709\u7c7b\u4f3c\u9012\u5f52\u7684\u73b0\u8c61\u3002 \u4f60\u53ef\u80fd\u5df2\u7ecf\u731c\u5230\u4e3a\u4ec0\u4e48 OnRawKey() \u53ef\u4ee5\u6392\u9664\u6587\u672c\u8f93\u5165\u6846\u4e86\uff0c\u6211\u628a\u4ee3\u7801\u8d34\u5728\u4e0b\u9762\uff0c\u5c1d\u8bd5\u5206\u6790\u4e00\u4e0b\u5427\u3002\uff08\u6587\u672c\u8f93\u5165ui\u88ab\u5b9a\u4e49\u5728 widgets/textedit\uff09 widgets/textedit.lua, 266 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 function TextEdit : OnRawKey ( key , down ) if self . editing and self . prediction_widget ~= nil and self . prediction_widget : OnRawKey ( key , down ) then self . editing_enter_down = false return true end if TextEdit . _base . OnRawKey ( self , key , down ) then self . editing_enter_down = false return true end if self . editing then if down then if TheInput : IsPasteKey ( key ) then self . pasting = true local clipboard = TheSim : GetClipboardData () for i = 1 , # clipboard do local success , overflow = self : OnTextInput ( clipboard : sub ( i , i )) if overflow then break end end self . pasting = false elseif self . allow_newline and key == KEY_ENTER and down then self : OnTextInput ( \" \\n \" ) else self . inst . TextEditWidget : OnKeyDown ( key ) end self . editing_enter_down = key == KEY_ENTER elseif key == KEY_ENTER and not self . focus then -- this is a fail safe incase the mouse changes the focus widget while editing the text field. We could look into FrontEnd:LockFocus but some screens require focus to be soft (eg: lobbyscreen's chat) if self . editing_enter_down then self . editing_enter_down = false if not self . allow_newline then self : OnProcess () end end return true elseif key == KEY_TAB and self . nextTextEditWidget ~= nil then self . editing_enter_down = false local nextWidg = self . nextTextEditWidget if type ( nextWidg ) == \"function\" then nextWidg = nextWidg () end if nextWidg ~= nil and type ( nextWidg ) == \"table\" and nextWidg . inst . TextEditWidget ~= nil then self : SetEditing ( false ) nextWidg : SetEditing ( true ) end -- self.nextTextEditWidget:OnControl(CONTROL_ACCEPT, false) else self . editing_enter_down = false self . inst . TextEditWidget : OnKeyUp ( key ) end if self . OnTextInputted ~= nil then self . OnTextInputted () end end --gobble up unregistered valid raw keys, or we will engage debug keys! return not self . validrawkeys [ key ] end","title":"OnRawKey() \u51fd\u6570\u7684\u7ec6\u8282"}]}